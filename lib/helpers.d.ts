import { FlComputed } from "./computed";
import { FlEffect } from "./effect";
import { FlState } from "./state";
import { FlElement, FlHTMLElement, FlTextNode } from "./element";
import { FlRoute, FlRouter } from "./router";
import { FlConditional, FlLoop } from "./control-flow";
export declare function $text<T extends any[]>(text: string, ...args: T): FlTextNode<T>;
export declare function $state<T>(value: T): FlState<T>;
export declare function $effect(fn: (...args: FlState[]) => void): FlEffect;
export declare function $computed(fn: (...args: FlState[]) => void, ...states: FlState[]): FlComputed;
export declare function $router(...routes: FlRoute[]): FlRouter;
export declare function $link(path: string, element: FlElement | string): FlHTMLElement;
export declare function $if(condition: () => boolean, trueBranch: FlElement, falseBranch: FlElement): FlConditional;
export declare function $for<T>(state: FlState<Array<T>>, iteration: (element: T) => FlElement): FlLoop<T>;
