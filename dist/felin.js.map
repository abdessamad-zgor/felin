{"version":3,"file":"felin.js","sources":["../src/core/tasks.ts","../src/utils.ts","../src/primitives/computed.ts","../src/primitives/state.ts","../src/router/index.ts","../src/elements/element.ts","../src/core/stack.ts","../src/core/registry.ts","../src/primitives/effect.ts","../src/primitives/control-flow.ts","../src/elements/component.ts","../src/elements/html.ts","../src/elements/svg.ts","../src/core/document.ts","../src/helpers.ts","../src/felin.ts"],"sourcesContent":["import { Computed } from \"../primitives/computed\"\nimport { State } from \"../primitives/state\"\nimport { FDocument } from \"./document\"\nimport { FElement, FHTMLElement } from \"../elements/element\"\nimport { Router } from \"../router\"\nimport { Effect } from \"../primitives/effect\"\n\nexport interface Task<A = { [key: string]: any }, R = void> {\n  priority: number\n  args: A\n  call(): R\n}\n\ntype DOMUpdateArgs = { state: State|Computed, document: FDocument }\n\nexport class DOMUpdate implements Task<DOMUpdateArgs, void> {\n  priority: number\n  args: DOMUpdateArgs\n\n  constructor(args: DOMUpdateArgs) {\n    this.priority = 1\n    this.args = args\n  }\n\n  call() {\n    for(let element of this.args.state.elements){\n      let newValue = (this.args.state as Function)()\n      let nodeSelector = this.args.document.selector(element as FHTMLElement)\n\n      let domElement = this.args.document.document.querySelector(nodeSelector)\n      if (domElement) {\n        domElement.replaceWith(element.element())\n      }\n    }\n  }\n}\n\n\nexport class ComputedRefresh implements Task<Computed, void> {\n  priority: number\n  args: Computed\n\n  constructor(args: Computed){\n    this.args = args\n    this.priority = 2\n  }\n\n  call() {\n    let newValue = this.args.fn(...this.args.states)\n    this.args.value = newValue\n  }\n\n}\n\nexport class EffectCall implements Task {\n  priority: number\n  args: Effect\n\n  constructor(args: Effect) {\n    this.args = args\n    this.priority = 3\n  }\n\n  call() {\n    this.args.effect()\n  }\n}\n\ntype RouteChangeArgs = {document: FDocument, router: Router, path: string}\n\nexport class RouteChange implements Task {\n  priority: number\n  args: RouteChangeArgs\n\n  constructor(args:RouteChangeArgs) {\n    this.args = args\n    this.priority = 4\n  }\n\n  call() {\n   this.args.router.matchRoute(this.args.path)\n    let activeRoutes = this.args.router.active\n    let previousRoutes = this.args.router.previous\n    if(previousRoutes.length>0){\n      for(let previousRoute of previousRoutes){\n        let routeParent = previousRoute.parent\n        routeParent._children = routeParent._children.filter(child=>child._id != previousRoute.element._id)\n      }\n    }\n    for(let activeRoute of activeRoutes){\n      let routeParent = activeRoute.parent\n      routeParent._children.splice(activeRoute.index, 0, activeRoute.element)\n    }\n    let routesParentNodes = activeRoutes.map(route=>route.parent)\n    for(let targetNode of routesParentNodes){\n      this.args.document.rerenderElement(targetNode)\n    }\n    this.args.document.window.history.pushState(\"\", \"\", this.args.path)\n  }\n}\n\ntype InitEffectRegistryArgs = Effect\nexport class InitEffectRegistry implements Task {\n  priority: number\n  args: InitEffectRegistryArgs \n\n  constructor(args: InitEffectRegistryArgs ){\n    this.priority = 0\n    this.args = args\n  }\n\n  call(){\n    Felin.initEffectRegistry(this.args)\n  }\n}\n\ntype InitComputedRegistryArgs = Computed\nexport class InitComputedRegistry implements Task {\n  priority: number\n  args: InitComputedRegistryArgs \n\n  constructor(args: InitComputedRegistryArgs){\n    this.priority = 0\n    this.args = args\n  }\n\n  call(){\n    Felin.initComputedRegistry(this.args)\n  }\n}\n","import { Properties as CssStyle } from \"csstype\";\nimport { FElement, FHTMLElement, FSVGElement, FText } from \"./elements/element\";\n\nexport enum ValueType {\n  NUMBER,\n  STRING,\n  BOOLEAN,\n  OBJECT,\n  MAP,\n  SET,\n  ARRAY,\n  ANY\n}\n\nexport function toCssString(style: CssStyle) {\n  let styleString = \"\";\n  for (let property of Object.keys(style)) {\n    let key = property.split('').map((char, i) => {\n      if (property.charCodeAt(i) >= 65 && property.charCodeAt(i)<=90) {\n        return '-' + char.toLowerCase()\n      }\n      return char;\n    });\n    styleString += key.join('') + \": \" + style[property] + \";\"\n  }\n  return styleString\n}\n\nfunction isObjectLiteral(obj) {\n    if (typeof obj !== \"object\" || obj === null)\n        return false;\n\n    var hasOwnProp = Object.prototype.hasOwnProperty,\n    ObjProto = obj;\n\n    // get obj's Object constructor's prototype\n    while (Object.getPrototypeOf(ObjProto = Object.getPrototypeOf(ObjProto)) !== null);\n\n    return Object.getPrototypeOf(obj) === ObjProto;\n};\n\nexport function determineValueType<T>(value: T){\n  if(typeof value == \"string\"){\n    return ValueType.STRING\n  }else if(typeof value == \"number\"){\n    return ValueType.NUMBER\n  }else if(typeof value == \"boolean\"){\n    return ValueType.BOOLEAN\n  }else if(Array.isArray(value)){\n    return ValueType.ARRAY\n  }else if(isObjectLiteral(value)){\n    return ValueType.OBJECT\n  }else {\n    return ValueType.ANY\n  }\n}\n\nexport function getObjectMethods(obj){\n  let objectPrototype = obj.prototype\n  let methods = Object.getOwnPropertyNames(objectPrototype).filter(k=>typeof obj[k] == \"function\" && k!=\"constructor\");\n  return methods\n}\n\nexport function flattenElementTree(element: FElement, acc?: FElement[]): FElement[] {\n  if(acc){\n    let lastElementParent = element;\n    let i = 1;\n    let nextElementParentIndex = acc.findIndex(e=>e._id == element._id)+i\n    let nextElementParent: FElement|null = null;\n    while( nextElementParentIndex < acc.length ){\n      nextElementParent = acc[nextElementParentIndex]\n      if(nextElementParent instanceof FSVGElement || nextElementParent instanceof FHTMLElement){\n        if(nextElementParent._children.length!=0){\n          nextElementParent = acc[nextElementParentIndex]\n          acc = [...acc, ...(nextElementParent as  FHTMLElement | FSVGElement)._children]\n          return flattenElementTree(nextElementParent, acc)\n        }else{\n          continue;\n        }\n      }\n      i++;\n      nextElementParentIndex = acc.findIndex(e=>e._id == element._id)+i\n    }\n    return acc\n  }else{\n    let accumulator = [];\n    if(element instanceof FHTMLElement || element instanceof FSVGElement){\n      if(element._children.length>0){\n        accumulator = [element, ...element._children]\n        return flattenElementTree(element, accumulator)\n      }else {\n        accumulator = [element]\n        return accumulator\n      }\n    }else{\n      accumulator = [element]\n      return accumulator\n    }\n  }\n  return []\n}\n\nexport class ExtensibleFunction extends Function {\n  constructor(f) {\n    super()\n    return Object.setPrototypeOf(f, new.target.prototype)\n  }\n}\n","import { FElement } from \"../elements/element\";\nimport { ExtensibleFunction } from \"../utils\"\nimport { State } from \"./state\";\n\nexport class Computed extends ExtensibleFunction {\n  _id: string\n  value: any\n  fn: (...args: State[]) => any\n  states: State[]\n  elements: FElement[] = []\n\n  constructor(fn: (...args: State[]) => any, ...states: State[]) {\n    super(() => {\n      this.value = this.fn(...this.states)\n      return this.value\n    })\n    this.fn = fn\n    this.states = states\n    this.value = fn(...states)\n    this._id = crypto.randomUUID()\n    Felin.registerComputed(this)\n  }\n\n  setElement(element: FElement){\n    this.elements.push(element)\n  }\n}\n","import { FElement } from \"../elements/element\";\nimport { ExtensibleFunction, ValueType, determineValueType, getObjectMethods } from \"../utils\"\nimport { Computed } from \"./computed\";\n\ntype FStateMutation<T, R> = (state: T) => R\n\ninterface FState<T = any> {\n  state: StateType<T>,\n  _id: string,\n  parent?: ParentState,\n  set: <R>(fnOrState: FStateMutation<T, R> | T, child?: State<T>) => void,\n}\n\n\ntype ParentState = {\n  state: FState,\n  key: string\n}\n\ntype FStateType = string | boolean | number | {[key: string]: any} | any[] \ntype StateType<T = FStateType> = FNumber | FArray | FObject | FBoolean | FString\n\nexport class State<T = FStateType> extends ExtensibleFunction implements FState<T> {\n  _id: string;\n  state: StateType<T>;\n  parent?: ParentState;\n  elements: FElement[] = []\n\n  constructor(value: T, parent?: ParentState) {\n    super(() => this.state.value )\n    this._id = crypto.randomUUID();\n    if (parent) {\n      this.parent = parent;\n    }\n    switch (determineValueType(value)) {\n      case ValueType.OBJECT:\n        this.state = new FObject(value)\n        this.state.parent = this\n        break;\n      case ValueType.ARRAY:\n        this.state = new FArray<any>(value as any[])\n        this.state.parent = this \n        break;\n      case ValueType.NUMBER:\n        this.state = new FNumber(value as number)\n        this.state.parent = this \n        break;\n      case ValueType.STRING:\n        this.state = new FString(value as string)\n        this.state.parent = this\n        break;\n      case ValueType.BOOLEAN:\n        this.state = new FBoolean(value as boolean)\n        this.state.parent = this\n        break;\n      case ValueType.ANY:\n        throw Error(\"Error: unsupported state data type.\")\n        break;\n      default:\n        break;\n    }\n\n    if (this.state instanceof FObject) {\n      let handler: ProxyHandler<State<T>> = {\n        get: (target: State<T>, prop: string, reciever) => {\n          if(prop==\"set\"){\n              return this.set\n          }else if (getObjectMethods(target.state).includes(prop)) {\n            return target.state[prop]\n          } else if (!Object.keys(target()).includes(prop)) {\n            return Reflect.get(target, prop, reciever);\n          } else {\n            let value = target.state[prop];\n            let childState = new State<typeof value>(value, { state: this, key: prop });\n            return childState;\n          }\n        }\n      }\n      return new Proxy(this, handler);\n    } else if (this.state instanceof FArray) {\n      let handler: ProxyHandler<State<T>> = {\n        get: (target: State<T>, prop: string, reciever) => {\n          if(prop==\"set\"){\n              return this.set\n          }else \n          if (getObjectMethods(target.state).includes(prop)) {\n            return target.state[prop]\n          } else if (!Object.keys(target()).includes(prop)) {\n            return Reflect.get(target, prop, reciever);\n          } else {\n            let value = target.state[prop];\n            let childState = new State<typeof value>(value, { state: this, key: prop });\n            return childState;\n          }\n        }\n      }\n      return new Proxy(this, handler);\n    } else if (this.state instanceof FNumber) {\n      let handler: ProxyHandler<State<T>> = {\n        get: (target: State<T>, prop: string, reciever) => {\n          if(prop==\"set\"){\n              return target.set\n          }else \n          if (getObjectMethods(target.state).includes(prop)) {\n            return target.state[prop]\n          } else {\n            return Reflect.get(target, prop, reciever)\n          }\n        }\n      }\n      return new Proxy(this, handler)\n    } \n  }\n\n  set<R>(fnOrState: FStateMutation<FStateType, R> | FStateType, child?: State<T>) {\n    let newValue: FStateType = this.state.value as FStateType\n    if (child) {\n      for (let key of Object.keys(this.state.value)) {\n        if (key == child.parent.key) {\n          newValue[key] = child.state.value\n        }\n      }\n    }\n    if (fnOrState) {\n      if (typeof fnOrState === \"function\") {\n        newValue = (fnOrState)(this.state.value) \n      } else {\n        newValue = fnOrState;\n      }\n      this.state.value = newValue\n    }\n    if (this.parent) {\n      this.state.value = newValue;\n      this.parent.state.set(undefined, this)\n    } else {\n      this.state.value = newValue\n      Felin.registerStateUpdate(this)\n    }\n  }\n\n  setElement(element: FElement) {\n    this.elements.push(element)\n  }\n}\n\nexport class FArray<T = any> {\n  value: Array<T>\n  parent?: State<T>\n  constructor(value: T[]) {\n    this.value = value\n    let handler: ProxyHandler<FArray<T>> = {\n      get: (target: FArray<T>, prop: string, reciever) => {\n        if (getObjectMethods(target).includes(prop)) {\n          return target[prop]\n        } else if (Object.keys(target.value).includes(prop)) {\n          let value = target.value[prop];\n          return value;\n        } else {\n          return Reflect.get(target, prop, reciever);\n        }\n      }\n    }\n    return new Proxy(this, handler);\n  }\n\n  map() {\n\n  }\n\n  filter() {\n\n  }\n\n  reduce() {\n\n  }\n\n  find() {\n\n  }\n\n  every() {\n\n  }\n\n  some() {\n\n  }\n}\n\nexport class FBoolean {\n  value: boolean\n  parent?: State\n  constructor(value: boolean) {\n    this.value = value\n  }\n}\n\nexport class FObject<T extends { [key: string]: any } = {}> {\n  value: T\n  parent?: State<T>\n  constructor(value: T) {\n    this.value = value\n    let handler = {\n      get: (target, prop, reciever) => {\n        if (!Object.keys(target.value).includes(prop)) {\n          return Reflect.get(target, prop, reciever)\n        } else {\n          let value = target.value[prop]\n          return value\n        }\n      }\n    }\n    return new Proxy(this, handler)\n  }\n\n  keys() {\n    return new Computed(() => Object.keys(this.value), this.parent)\n  }\n\n  values() {\n    return new Computed(() => Object.values(this.value), this.parent)\n  }\n\n  has(key: string) {\n    return new Computed(() => Object.keys(this.value).includes(key), this.parent)\n  }\n}\n\nexport class FString {\n  value: string\n  parent?: State\n  constructor(value: string) {\n    this.value = value\n  }\n}\n\nexport class FNumber {\n  value: number\n  parent?: State\n  constructor(value: number) {\n    this.value = value\n  }\n\n  gt(cmp: number) {\n    return new Computed(() => this.value > cmp, this.parent)\n  }\n\n  gte(cmp: number) {\n    return new Computed(() => this.value >= cmp, this.parent)\n  }\n\n  lt(cmp: number) {\n    return new Computed(() => this.value < cmp, this.parent)\n  }\n\n  lte(cmp: number) {\n    return new Computed(() => this.value <= cmp, this.parent)\n  }\n\n  eq(cmp: number) {\n    return new Computed(() => this.value == cmp, this.parent)\n  }\n}\n","import { FElement, FHTMLElement } from \"../elements/element\"\n\n\nexport type RouterTreeLocation = {router: Router, location: FHTMLElement}\n\nexport class Router {\n  routes:  Route[]\n  index?: number\n  active: Route[]\n  previous: Route[]\n  history: Route[]\n  parent?: FHTMLElement;\n  params: {[key: string]: string|number}\n\n  constructor(...routes: Route[]){\n    this.routes = routes\n    this.params = {}\n    this.previous = []\n    this.active = []\n  }\n\n  matchRoute(path: string){\n    if(this.active.length>0){\n      this.previous = [...this.active]\n      this.active = []\n    }\n    if(path=='/'){\n      let homeRoute = this.routes.find(r=>r.path==\"/\")\n      if(homeRoute){\n        this.active = [homeRoute]\n        return;\n      }\n      return;\n    }\n    let pathSegments = path.split('/').filter(s=>s!='')\n    console.log(pathSegments)\n    let foundMatch: Route|undefined = undefined\n    for(let i=0; i<pathSegments.length; i++){\n      if(!foundMatch){\n        for(let route of this.routes){\n          let routeSegments = route.path.split('/')\n          if(pathSegments[i]==routeSegments[i]){\n            foundMatch = route\n            break;\n          }\n        }\n      } else {\n        foundMatch = undefined\n        for(let matchChildRoute of foundMatch.children){\n          let routeSegments = matchChildRoute.path.split('/')\n          if(routeSegments[i].startsWith(\":\")){\n            this.params = {[routeSegments[i].slice(1)]: Number.isNaN((+pathSegments[i]) as number) ? +pathSegments[i]: pathSegments[i]}\n            foundMatch = matchChildRoute\n            break;\n          }else if(routeSegments[i] == pathSegments[i]){\n            foundMatch = matchChildRoute;\n            break;\n          }\n        }\n      }\n      if(foundMatch!=undefined){\n        this.active.push(foundMatch)\n        continue;\n      }else if(i==0){\n        let catchAll = this.routes.find(r=>r.path == \"*\")\n        if(catchAll!=undefined){\n          this.active = [catchAll]\n        }\n        break;\n      } else if (this.active.length<i+1){\n        break;\n      }\n    }\n  }\n\n  buildRouterTree(): Router {\n    for(let route of this.routes){\n      let element = route.element\n      if(element instanceof FHTMLElement){\n        if(element.register.router){\n          throw Error(\"Cannot have nested routers inside the same element tree\");\n        } else {\n          if(element.register.routes && element.register.routes.length>0){\n            for(let childRoute of element.register.routes){\n              childRoute.parentRoute = route\n              route.children.push(childRoute)\n            }\n          }\n        }\n      }\n    }\n    return this\n  }\n}\n\nexport class Route {\n  path: string\n  index?: number\n  element: FElement\n  parentRoute?: Route\n  parent?: FHTMLElement\n  children?: Route[] = []\n\n  constructor(path: string, element: FElement){\n    this.path = path\n    this.element = element\n  }\n}\n\n","import { Properties as CssStyle } from \"csstype\";\nimport { State } from \"../primitives/state\";\nimport { ExtensibleFunction, toCssString } from \"../utils\";\nimport { Route, Router } from \"../router\";\nimport { Computed } from \"../primitives/computed\";\nimport { Conditional, Loop } from \"../primitives/control-flow\";\n\nexport type FEvent = Event | CustomEvent\n\nexport interface FElement<Register = {}> {\n  _id: string,\n  register: Register,\n  parent?: FElement,\n  element(): HTMLElement | SVGElement | Text\n}\n\ntype FTextChildren = (State | Computed | string | number)[]\ntype FTextRegister = Partial<{states: State[], computed: Computed[]}>\n\nexport class FText implements FElement<FTextRegister> {\n  _id: string\n  register: FTextRegister\n  parent?: FHTMLElement | FSVGElement;\n  text: string\n\n  constructor(text: string, ...args: FTextChildren) {\n    this._id = crypto.randomUUID()\n    this.register = {}\n    if (args.length > 0)\n      for (let arg of args) {\n        if (arg instanceof State) {\n          arg.setElement(this)\n          if(!this.register.states) this.register.states = []\n          this.register.states.push(arg)\n          text = text.replace(\"{}\", arg())\n          continue;\n        }\n        text = text.replace(\"{}\", arg as string)\n      }\n    this.text = text.toString()\n  }\n\n  element() {\n    let textContent = this.text\n    for (let state of this.register.states) {\n      textContent = textContent.replace(\"{}\", state())\n    }\n    return document.createTextNode(textContent)\n  }\n}\n\ntype FHTMLElementChidren = (FElement | Router | Route | Conditional | Loop | State | Computed | string | number)[]\ntype FHTMLElementRegister = Partial<{states: State[], computed: Computed[], router: Router, routes: Route[], conditionals: Conditional[], loops: Loop[]}>\nexport class FHTMLElement implements FElement<FHTMLElementRegister> {\n  _id: string;\n  name: keyof HTMLElementTagNameMap;\n  parent: FHTMLElement | FSVGElement;\n  register: FHTMLElementRegister\n  _children: FElement[];\n  _style: CssStyle | null;\n  _listeners: Map<keyof HTMLElementEventMap, (event: FEvent) => void>\n  _classname: string\n  _attributes: { [attr: string]: any }\n\n  constructor(name: keyof HTMLElementTagNameMap, children?: FHTMLElementChidren) {\n    this._id = crypto.randomUUID()\n    this.name = name\n    this.register = {}\n    if (Array.isArray(children)) {\n      this._children = []\n      for (let i = 0; i < children.length; i++) {\n        let child = children[i]\n        if (child instanceof State) {\n          this._children.push(new FText(\"{}\", child as State))\n          child.setElement(this)\n          if(!this.register.states) this.register.states = []\n          this.register.states.push(child)\n        } else if(child instanceof Computed){\n          this._children.push(new FText(\"{}\", child as Computed))\n          child.setElement(this)\n          if(!this.register.computed) this.register.computed = []\n          this.register.computed.push(child)\n        } else if (child instanceof Router) {\n          if (this.register.router) {\n            throw Error(\"Cannot have multiple routers in the same element tree.\")\n          } else {\n            child.parent = this\n            child.index = i\n            this.register.router = child\n            for (let route of this.register.router.routes) {\n              route.parent = this\n              route.index = i\n            }\n          }\n        } else if (child instanceof Route) {\n          child.parent = this\n          child.index = i\n          if (!Array.isArray(this.register.routes))\n            this.register.routes = []\n          this.register.routes.push(child)\n        } else if (child instanceof FHTMLElement || child instanceof FSVGElement || child instanceof FText) {\n          (child as FElement).parent = this\n          this._children.push(child)\n        } else if (typeof child == \"string\" || typeof child == \"number\") {\n          let textContent = new FText(child.toString())\n          this._children.push(textContent)\n        }\n      }\n    } else {\n      this._children = []\n    }\n    this._style = null\n    this._listeners = new Map()\n    this._attributes = {}\n  }\n\n  style(style: CssStyle) {\n    this._style = style\n    return this\n  }\n\n  children(children?: FElement[]) {\n    for (let child of children) {\n      if (child instanceof State || child instanceof Computed) {\n        let textContent = new FText(\"{}\", (child as ExtensibleFunction)())\n        textContent.parent = this\n        this._children.push(textContent)\n      } else {\n        this._children.push(child)\n      }\n    }\n    return this\n  }\n\n  listener(eventname: keyof HTMLElementEventMap, callback: (event: FEvent) => void) {\n    if (!this._listeners.has(eventname)) {\n      this._listeners.set(eventname, callback)\n    }\n    return this\n  }\n\n  element(): HTMLElement {\n    let element = document.createElement(this.name)\n\n    for (let entry of this._listeners.entries())\n      element.addEventListener(entry[0], entry[1])\n\n    if (this._style)\n      element.style.cssText = toCssString(this._style)\n\n    if (this._classname)\n      element.classList.add(...this._classname.split(\" \"))\n\n    for (let key of Object.keys(this._attributes))\n      element.setAttribute(key, this._attributes[key] as string)\n\n    let elementChildren = this._children as FElement[]\n    if (elementChildren.length == 0) {\n      return element\n    } else {\n      for (let child of elementChildren) {\n        element.appendChild(child.element())\n      }\n      return element\n    }\n  }\n\n  class(classname: string) {\n    this._classname = classname\n  }\n\n  attr(name: string, value: any) {\n    this._attributes[name] = value\n  }\n\n  attrs(attrs: { [attr: string]: any }) {\n    this._attributes = { ...this._attributes, ...attrs }\n  }\n}\n\ntype FSVGElementChildren = FHTMLElement | FSVGElement | FText | State | Computed | Conditional | string | number| Loop;\ntype FSVGElementRegister = Partial<{states: State[], computed: Computed[], conditionals: Conditional[], loops: Loop[]}>;\nexport class FSVGElement implements FElement<FSVGElementRegister> {\n  _id: string;\n  name: keyof SVGElementTagNameMap;\n  parent: FSVGElement | FHTMLElement;\n  register: FSVGElementRegister;\n  _children: FElement[];\n  _style: CssStyle | null;\n  _listeners: Map<keyof SVGElementEventMap, (event: FEvent) => void>\n  _classname: string\n  _attributes: { [attr: string]: any }\n\n  constructor(name: keyof SVGElementTagNameMap, children?: FElement[]) {\n    this._id = crypto.randomUUID();\n    this.name = name;\n    this.register = {}\n    this._children = []\n    for (let child of children) {\n      if (child instanceof State) {\n        let textContent = new FText(\"{}\", child)\n        textContent.parent = this\n        this._children.push(textContent)\n        if(!this.register.states) this.register.states = []\n        this.register.states.push(child)\n        this.register.states.push(child as State)\n      }else if (child instanceof Computed){\n        let textContent = new FText(\"{}\", child)\n        textContent.parent = this\n        this._children.push(textContent)\n        if(!this.register.computed) this.register.computed = []\n        this.register.computed.push(child)\n      } else {\n        this._children.push(typeof child == \"string\" ? new FText(child) : child)\n      }\n    }\n    this._style = null\n    this._listeners = new Map()\n    this._attributes = {}\n  }\n\n  style(style: CssStyle) {\n    this._style = style\n    return this\n  }\n\n  children(children?: FElement[]) {\n    for (let child of children) {\n      if (child instanceof State) {\n        this._children.push(new FText(\"{}\", child))\n      } else {\n        this._children.push(child)\n      }\n    }\n    return this\n  }\n\n  listener(eventname: keyof SVGElementEventMap, callback: (event: FEvent) => void) {\n    if (!this._listeners.has(eventname)) {\n      this._listeners.set(eventname, callback)\n    }\n    return this\n  }\n\n  element(parent?: FSVGElement): SVGElement {\n    if (parent) {\n      this.parent = parent\n    }\n    let element = document.createElementNS(\"http://www.w3.org/2000/svg\", this.name)\n    //element.style.cssText = toCssString(this._style)\n    for (let entry of this._listeners.entries()) {\n      element.addEventListener(entry[0], entry[1])\n    }\n    if (this._style) {\n      element.style.cssText = toCssString(this._style)\n    }\n    if (this._classname) {\n      element.classList.add(...this._classname.split(\" \"))\n    }\n\n    for (let key of Object.keys(this._attributes)) {\n      element.setAttribute(key, this._attributes[key] as string)\n    }\n\n    let elementChildren = this._children as FElement[]\n    if (elementChildren.length == 0) {\n      return element\n    } else {\n      for (let child of elementChildren) {\n        //@ts-ignore\n        element.appendChild(child.element(this))\n      }\n      return element\n    }\n  }\n\n  class(classname: string) {\n    this._classname = classname\n  }\n\n  attr(name: string, value: any) {\n    this._attributes[name] = value\n  }\n\n  attrs(attrs: { [attr: string]: any }) {\n    this._attributes = { ...this._attributes, ...attrs }\n  }\n}\n\n","import { ComputedRefresh, DOMUpdate, EffectCall, RouteChange, Task } from \"./tasks\";\n\nfunction quickSortByPriority(array: Task[]) {\n  if (array.length <= 1) {\n    return array;\n  }\n\n  let pivot = array[0];\n  let left = [];\n  let right = [];\n\n  for (let i = 1; i < array.length; i++) {\n    array[i].priority < pivot.priority ? left.push(array[i]) : right.push(array[i]);\n  }\n  return quickSortByPriority(left).concat(pivot, quickSortByPriority(right));\n};\n\nexport class Stack {\n  tasks: Task[] = []\n  running: boolean = false\n  constructor() {\n  }\n\n  pop(): Task {\n    if (this.tasks.length > 0) {\n      let highestPriorityTask = this.tasks[0]\n      this.tasks = this.tasks.slice(1)\n      return highestPriorityTask\n    }\n  }\n\n  push(task: Task) {\n    this.tasks.push(task)\n    this.tasks = quickSortByPriority(this.tasks)\n    if (!this.running) this.run()\n  }\n\n  empty() {\n    return this.tasks.length == 0\n  }\n\n  run() {\n    if (!this.running) this.running = true\n    while (this.running) {\n      if (this.empty()) {\n        this.running = false\n        break;\n      }\n      let task = this.pop()\n      task.call()\n    }\n  }\n}\n","import { ComputedRefresh, DOMUpdate, EffectCall, InitEffectRegistry, InitComputedRegistry, Task, RouteChange } from \"./tasks\";\nimport { FText, FHTMLElement, FSVGElement, FElement } from \"../elements/element\";\nimport { Computed } from \"../primitives/computed\";\nimport { Effect } from \"../primitives/effect\";\nimport { State } from \"../primitives/state\";\nimport { Router } from \"../router\";\nimport { FDocument } from \"./document\";\nimport { Stack } from \"./stack\";\n\ntype DocumentRegister = {\n  document: FDocument,\n  states: State[],\n  effects: Effect[],\n  computed: Computed[],\n  router: Router\n}\n\nexport class Registry {\n  stack: Stack\n  register: { [key: string]: DocumentRegister }\n\n  constructor() {\n    this.stack = new Stack();\n    this.register = {}\n  }\n\n  initEffectRegistry(effect: Effect){\n    let root = Object.keys(this.register).find(r=>effect.states.map(s=>s._id).some(s_id=>this.register[r].states.map(s=>s._id).includes(s_id)))\n    if(root){\n      if(!this.register[root].effects) this.register[root].effects = []\n      this.register[root].effects.push(effect)\n    } else {\n      this.stack.push(new InitEffectRegistry(effect))\n    }\n  }\n  \n  initComputedRegistry(computed: Computed){\n    let root = Object.keys(this.register).find(r=>computed.states.map(s=>s._id).some(s_id=>this.register[r].states.map(s=>s._id).includes(s_id)))\n    if(root){\n      if(!this.register[root].computed) this.register[root].computed = []\n      this.register[root].computed.push(computed)\n    } else {\n      this.stack.push(new InitComputedRegistry(computed))\n    }\n  }\n\n  registerStates(root: string, states: State[]) {\n    this.register[root].states = states\n  }\n\n  registerStateUpdate(state: State) {\n    let root = Object.keys(this.register).find(r => this.register[r].states.some(s => s._id == state._id))\n    if (root) {\n      let fdocument = this.register[root].document\n      let states = this.register[root].states.filter(s => s._id == state._id);\n      for (let state of states) {\n      let targets = state.elements as FElement[]\n        for(let target of targets){\n          if (target instanceof FText) {\n            target = target.parent as FHTMLElement\n          }\n          let domUpdate = new DOMUpdate({ document: fdocument, state: state})\n          this.stack.push(domUpdate);\n        }\n      }\n      let computed = this.register[root].computed.find(e => e.states.some(s => s._id == state._id))\n      if (computed) {\n        let computedRefresh = new ComputedRefresh(computed)\n        this.stack.push(computedRefresh)\n        let cStates = this.register[root].computed.filter(s => s._id == computed._id);\n        for (let cState of cStates) {\n          let cTargets = cState.elements as FElement[]\n          for(let cTarget of cTargets){\n            if (cTarget instanceof FText) {\n              cTarget = cTarget.parent as FHTMLElement\n            }\n            let computedDomUpdate = new DOMUpdate({ document: fdocument, state: cState })\n            this.stack.push(computedDomUpdate)\n          }\n        }\n      }\n\n      let effect = this.register[root].effects.find(e => e.states.some(s => s._id == state._id))\n      if (effect) {\n        let effectCall = new EffectCall(effect)\n        this.stack.push(effectCall)\n      }\n    }\n\n  }\n\n  registerFlDocumentRoot(root: string, document: FDocument) {\n    if (!Object.keys(this.register).includes(root)) {\n      this.register[root] = {} as DocumentRegister\n    }\n    this.register[root].document = document\n  }\n\n  run() {\n    this.stack.run()\n  }\n\n  registerEffect(effect: Effect) {\n    let initTask = new InitEffectRegistry(effect)\n    setTimeout(() => {\n      this.stack.push(initTask)\n    }, 1000);\n  }\n\n  registerComputed(computed: Computed){\n    let initTask = new InitComputedRegistry(computed)\n    setTimeout(() => {\n      this.stack.push(initTask)\n    }, 1000);\n  }\n\n  registerActiveRouter(rootSelector: string, router: Router) {\n    if (!Object.keys(this.register).includes(rootSelector)) {\n      this.register[rootSelector] = {} as DocumentRegister\n    }\n    this.register[rootSelector].router = router\n    this.registerRouteChange(window.location.href.slice(window.location.host.length + window.location.protocol.length + 2), rootSelector)\n  }\n\n  registerRouteChange(path: string, rootSelector: string) {\n    let args = { path, router: this.register[rootSelector].router, document: this.register[rootSelector].document }\n    let routeChangeTask = new RouteChange(args)\n    this.stack.push(routeChangeTask)\n  }\n\n  getElementRootSelector(element: FElement, parent?: FHTMLElement): string | boolean {\n    let rootSelector: string\n    let doesHaveChild: boolean = false\n    if (parent) {\n      for (let child of parent._children) {\n        if (child._id == element._id) {\n          doesHaveChild = true\n        } else {\n          if (child instanceof FHTMLElement) {\n            doesHaveChild = this.getElementRootSelector(element, child) as boolean\n          }\n        }\n      }\n      return doesHaveChild\n    } else {\n      for (let selector of Object.keys(this.register)) {\n        let selectedDocument = this.register[selector].document;\n        for (let child of selectedDocument.rootElement._children) {\n          if (child._id == element._id) {\n            rootSelector = selector\n          } else {\n            if (child instanceof FHTMLElement) {\n              if (this.getElementRootSelector(element, child) == true) {\n                rootSelector = selector\n              }\n            }\n          }\n        }\n      }\n      return rootSelector\n    }\n  }\n\n  getRouterParams(): { [key: string]: string | number } {\n    let routers = Object.keys(this.register).map(selector => this.register[selector].router)\n    let params = {}\n    for (let router of routers) {\n      if (router.active.length > 0) {\n        params = router.params\n      }\n    }\n    return params\n  }\n}\n\nexport const Felin = new Registry()\n","import { Computed } from \"./computed\"\nimport { State } from \"./state\"\n\nexport class Effect {\n  _id: string\n  effect: ()=>void\n  states: State[]\n\n  constructor(fn: ()=>void, ...states: State[]){\n    this.effect = fn\n    this.states = states\n    this._id = crypto.randomUUID()\n    Felin.registerEffect(this)\n  }\n}\n","import { FElement } from \"../elements/element\"\nimport { State } from \"./state\"\n\nexport class Conditional {\n  condition: ()=>boolean\n  _true: FElement\n  _false: FElement\n  parent?: FElement\n  index:number\n\n  constructor(condition: ()=>boolean, _true: FElement, _false: FElement){\n    this.condition = condition\n    this._true = _true\n    this._false = _false\n  }\n\n  element(parent?: FElement){\n    if(parent)\n      this.parent = parent\n    let result = this.condition()\n    if(result)\n      return this._true.element()\n    else\n      return this._false.element()\n  }\n}\n\nexport class Loop<T = any> {\n  state: State<Array<T>>\n  iteration: (element: T)=>FElement\n  index: number\n\n  constructor(state: State, iteration: (element: T)=>FElement){\n    this.state = state\n    this.iteration = iteration\n  }\n}\n","import { FElement } from \"./element\"\nimport { ExtensibleFunction } from \"../utils\"\n\nexport class Component<T extends { [key: string]: any }> extends ExtensibleFunction {\n  fn: (props: T) => FElement\n  props: T\n  parentNode?: FElement\n\n  constructor(fn: (props: T) => FElement) {\n    super((props: T) => { this.props = props; return this })\n    this.fn = fn\n  }\n\n  element(parent?: FElement) {\n    if (parent) {\n      this.parentNode = parent\n    }\n    let element = this.fn(this.props)\n    return element.element()\n  }\n}\n","import {FHTMLElement, FSVGElement, FElement} from '../elements/element'\n\nexport const a = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"a\", children = children)\n\treturn element;\n}\n\nexport const abbr = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"abbr\", children = children)\n\treturn element;\n}\n\nexport const address = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"address\", children = children)\n\treturn element;\n}\n\nexport const area = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"area\", children = children)\n\treturn element;\n}\n\nexport const article = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"article\", children = children)\n\treturn element;\n}\n\nexport const aside = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"aside\", children = children)\n\treturn element;\n}\n\nexport const audio = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"audio\", children = children)\n\treturn element;\n}\n\nexport const b = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"b\", children = children)\n\treturn element;\n}\n\nexport const base = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"base\", children = children)\n\treturn element;\n}\n\nexport const bdi = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"bdi\", children = children)\n\treturn element;\n}\n\nexport const bdo = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"bdo\", children = children)\n\treturn element;\n}\n\nexport const blockquote = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"blockquote\", children = children)\n\treturn element;\n}\n\nexport const body = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"body\", children = children)\n\treturn element;\n}\n\nexport const br = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"br\", children = children)\n\treturn element;\n}\n\nexport const button = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"button\", children = children)\n\treturn element;\n}\n\nexport const canvas = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"canvas\", children = children)\n\treturn element;\n}\n\nexport const caption = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"caption\", children = children)\n\treturn element;\n}\n\nexport const cite = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"cite\", children = children)\n\treturn element;\n}\n\nexport const code = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"code\", children = children)\n\treturn element;\n}\n\nexport const col = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"col\", children = children)\n\treturn element;\n}\n\nexport const colgroup = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"colgroup\", children = children)\n\treturn element;\n}\n\nexport const data = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"data\", children = children)\n\treturn element;\n}\n\nexport const datalist = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"datalist\", children = children)\n\treturn element;\n}\n\nexport const dd = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"dd\", children = children)\n\treturn element;\n}\n\nexport const del = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"del\", children = children)\n\treturn element;\n}\n\nexport const details = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"details\", children = children)\n\treturn element;\n}\n\nexport const dfn = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"dfn\", children = children)\n\treturn element;\n}\n\nexport const dialog = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"dialog\", children = children)\n\treturn element;\n}\n\nexport const div = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"div\", children = children)\n\treturn element;\n}\n\nexport const dl = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"dl\", children = children)\n\treturn element;\n}\n\nexport const dt = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"dt\", children = children)\n\treturn element;\n}\n\nexport const em = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"em\", children = children)\n\treturn element;\n}\n\nexport const embed = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"embed\", children = children)\n\treturn element;\n}\n\nexport const fieldset = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"fieldset\", children = children)\n\treturn element;\n}\n\nexport const figcaption = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"figcaption\", children = children)\n\treturn element;\n}\n\nexport const figure = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"figure\", children = children)\n\treturn element;\n}\n\nexport const footer = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"footer\", children = children)\n\treturn element;\n}\n\nexport const form = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"form\", children = children)\n\treturn element;\n}\n\nexport const h1 = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"h1\", children = children)\n\treturn element;\n}\n\nexport const h2 = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"h2\", children = children)\n\treturn element;\n}\n\nexport const h3 = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"h3\", children = children)\n\treturn element;\n}\n\nexport const h4 = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"h4\", children = children)\n\treturn element;\n}\n\nexport const h5 = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"h5\", children = children)\n\treturn element;\n}\n\nexport const h6 = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"h6\", children = children)\n\treturn element;\n}\n\nexport const head = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"head\", children = children)\n\treturn element;\n}\n\nexport const header = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"header\", children = children)\n\treturn element;\n}\n\nexport const hgroup = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"hgroup\", children = children)\n\treturn element;\n}\n\nexport const hr = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"hr\", children = children)\n\treturn element;\n}\n\nexport const html = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"html\", children = children)\n\treturn element;\n}\n\nexport const i = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"i\", children = children)\n\treturn element;\n}\n\nexport const iframe = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"iframe\", children = children)\n\treturn element;\n}\n\nexport const img = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"img\", children = children)\n\treturn element;\n}\n\nexport const input = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"input\", children = children)\n\treturn element;\n}\n\nexport const ins = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"ins\", children = children)\n\treturn element;\n}\n\nexport const kbd = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"kbd\", children = children)\n\treturn element;\n}\n\nexport const label = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"label\", children = children)\n\treturn element;\n}\n\nexport const legend = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"legend\", children = children)\n\treturn element;\n}\n\nexport const li = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"li\", children = children)\n\treturn element;\n}\n\nexport const link = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"link\", children = children)\n\treturn element;\n}\n\nexport const main = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"main\", children = children)\n\treturn element;\n}\n\nexport const map = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"map\", children = children)\n\treturn element;\n}\n\nexport const mark = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"mark\", children = children)\n\treturn element;\n}\n\nexport const menu = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"menu\", children = children)\n\treturn element;\n}\n\nexport const meta = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"meta\", children = children)\n\treturn element;\n}\n\nexport const meter = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"meter\", children = children)\n\treturn element;\n}\n\nexport const nav = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"nav\", children = children)\n\treturn element;\n}\n\nexport const noscript = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"noscript\", children = children)\n\treturn element;\n}\n\nexport const object = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"object\", children = children)\n\treturn element;\n}\n\nexport const ol = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"ol\", children = children)\n\treturn element;\n}\n\nexport const optgroup = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"optgroup\", children = children)\n\treturn element;\n}\n\nexport const option = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"option\", children = children)\n\treturn element;\n}\n\nexport const output = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"output\", children = children)\n\treturn element;\n}\n\nexport const p = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"p\", children = children)\n\treturn element;\n}\n\nexport const picture = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"picture\", children = children)\n\treturn element;\n}\n\nexport const pre = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"pre\", children = children)\n\treturn element;\n}\n\nexport const progress = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"progress\", children = children)\n\treturn element;\n}\n\nexport const q = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"q\", children = children)\n\treturn element;\n}\n\nexport const rp = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"rp\", children = children)\n\treturn element;\n}\n\nexport const rt = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"rt\", children = children)\n\treturn element;\n}\n\nexport const ruby = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"ruby\", children = children)\n\treturn element;\n}\n\nexport const s = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"s\", children = children)\n\treturn element;\n}\n\nexport const samp = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"samp\", children = children)\n\treturn element;\n}\n\nexport const search = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"search\", children = children)\n\treturn element;\n}\n\nexport const section = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"section\", children = children)\n\treturn element;\n}\n\nexport const select = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"select\", children = children)\n\treturn element;\n}\n\nexport const slot = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"slot\", children = children)\n\treturn element;\n}\n\nexport const small = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"small\", children = children)\n\treturn element;\n}\n\nexport const source = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"source\", children = children)\n\treturn element;\n}\n\nexport const span = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"span\", children = children)\n\treturn element;\n}\n\nexport const strong = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"strong\", children = children)\n\treturn element;\n}\n\nexport const sub = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"sub\", children = children)\n\treturn element;\n}\n\nexport const summary = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"summary\", children = children)\n\treturn element;\n}\n\nexport const sup = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"sup\", children = children)\n\treturn element;\n}\n\nexport const table = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"table\", children = children)\n\treturn element;\n}\n\nexport const tbody = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"tbody\", children = children)\n\treturn element;\n}\n\nexport const td = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"td\", children = children)\n\treturn element;\n}\n\nexport const template = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"template\", children = children)\n\treturn element;\n}\n\nexport const textarea = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"textarea\", children = children)\n\treturn element;\n}\n\nexport const tfoot = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"tfoot\", children = children)\n\treturn element;\n}\n\nexport const th = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"th\", children = children)\n\treturn element;\n}\n\nexport const thead = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"thead\", children = children)\n\treturn element;\n}\n\nexport const time = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"time\", children = children)\n\treturn element;\n}\n\nexport const title = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"title\", children = children)\n\treturn element;\n}\n\nexport const tr = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"tr\", children = children)\n\treturn element;\n}\n\nexport const track = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"track\", children = children)\n\treturn element;\n}\n\nexport const u = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"u\", children = children)\n\treturn element;\n}\n\nexport const ul = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"ul\", children = children)\n\treturn element;\n}\n\nexport const _var = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"var\", children = children)\n\treturn element;\n}\n\nexport const video = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"video\", children = children)\n\treturn element;\n}\n\nexport const wbr = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"wbr\", children = children)\n\treturn element;\n}\n","import {FHTMLElement, FSVGElement, FElement} from '../elements/element'\n\nexport const _a = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"a\", children = children)\n\treturn element;\n}\n\nexport const animate = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"animate\", children = children)\n\treturn element;\n}\n\nexport const animateMotion = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"animateMotion\", children = children)\n\treturn element;\n}\n\nexport const animateTransform = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"animateTransform\", children = children)\n\treturn element;\n}\n\nexport const circle = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"circle\", children = children)\n\treturn element;\n}\n\nexport const clipPath = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"clipPath\", children = children)\n\treturn element;\n}\n\nexport const defs = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"defs\", children = children)\n\treturn element;\n}\n\nexport const desc = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"desc\", children = children)\n\treturn element;\n}\n\nexport const ellipse = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"ellipse\", children = children)\n\treturn element;\n}\n\nexport const feBlend = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feBlend\", children = children)\n\treturn element;\n}\n\nexport const feColorMatrix = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feColorMatrix\", children = children)\n\treturn element;\n}\n\nexport const feComponentTransfer = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feComponentTransfer\", children = children)\n\treturn element;\n}\n\nexport const feComposite = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feComposite\", children = children)\n\treturn element;\n}\n\nexport const feConvolveMatrix = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feConvolveMatrix\", children = children)\n\treturn element;\n}\n\nexport const feDiffuseLighting = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feDiffuseLighting\", children = children)\n\treturn element;\n}\n\nexport const feDisplacementMap = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feDisplacementMap\", children = children)\n\treturn element;\n}\n\nexport const feDistantLight = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feDistantLight\", children = children)\n\treturn element;\n}\n\nexport const feDropShadow = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feDropShadow\", children = children)\n\treturn element;\n}\n\nexport const feFlood = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feFlood\", children = children)\n\treturn element;\n}\n\nexport const feFuncA = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feFuncA\", children = children)\n\treturn element;\n}\n\nexport const feFuncB = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feFuncB\", children = children)\n\treturn element;\n}\n\nexport const feFuncG = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feFuncG\", children = children)\n\treturn element;\n}\n\nexport const feFuncR = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feFuncR\", children = children)\n\treturn element;\n}\n\nexport const feGaussianBlur = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feGaussianBlur\", children = children)\n\treturn element;\n}\n\nexport const feImage = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feImage\", children = children)\n\treturn element;\n}\n\nexport const feMerge = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feMerge\", children = children)\n\treturn element;\n}\n\nexport const feMergeNode = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feMergeNode\", children = children)\n\treturn element;\n}\n\nexport const feMorphology = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feMorphology\", children = children)\n\treturn element;\n}\n\nexport const feOffset = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feOffset\", children = children)\n\treturn element;\n}\n\nexport const fePointLight = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"fePointLight\", children = children)\n\treturn element;\n}\n\nexport const feSpecularLighting = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feSpecularLighting\", children = children)\n\treturn element;\n}\n\nexport const feSpotLight = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feSpotLight\", children = children)\n\treturn element;\n}\n\nexport const feTile = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feTile\", children = children)\n\treturn element;\n}\n\nexport const feTurbulence = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feTurbulence\", children = children)\n\treturn element;\n}\n\nexport const filter = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"filter\", children = children)\n\treturn element;\n}\n\nexport const foreignObject = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"foreignObject\", children = children)\n\treturn element;\n}\n\nexport const g = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"g\", children = children)\n\treturn element;\n}\n\nexport const image = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"image\", children = children)\n\treturn element;\n}\n\nexport const line = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"line\", children = children)\n\treturn element;\n}\n\nexport const linearGradient = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"linearGradient\", children = children)\n\treturn element;\n}\n\nexport const marker = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"marker\", children = children)\n\treturn element;\n}\n\nexport const mask = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"mask\", children = children)\n\treturn element;\n}\n\nexport const metadata = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"metadata\", children = children)\n\treturn element;\n}\n\nexport const mpath = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"mpath\", children = children)\n\treturn element;\n}\n\nexport const path = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"path\", children = children)\n\treturn element;\n}\n\nexport const pattern = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"pattern\", children = children)\n\treturn element;\n}\n\nexport const polygon = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"polygon\", children = children)\n\treturn element;\n}\n\nexport const polyline = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"polyline\", children = children)\n\treturn element;\n}\n\nexport const radialGradient = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"radialGradient\", children = children)\n\treturn element;\n}\n\nexport const rect = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"rect\", children = children)\n\treturn element;\n}\n\nexport const set = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"set\", children = children)\n\treturn element;\n}\n\nexport const stop = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"stop\", children = children)\n\treturn element;\n}\n\nexport const svg = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"svg\", children = children)\n\treturn element;\n}\n\nexport const _switch = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"switch\", children = children)\n\treturn element;\n}\n\nexport const symbol = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"symbol\", children = children)\n\treturn element;\n}\n\nexport const _text = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"text\", children = children)\n\treturn element;\n}\n\nexport const textPath = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"textPath\", children = children)\n\treturn element;\n}\n\nexport const _title = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"title\", children = children)\n\treturn element;\n}\n\nexport const tspan = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"tspan\", children = children)\n\treturn element;\n}\n\nexport const use = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"use\", children = children)\n\treturn element;\n}\n\nexport const view = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"view\", children = children)\n\treturn element;\n}\n","import { FElement, FHTMLElement, FSVGElement, FText } from \"../elements/element\"\nimport { State } from \"../primitives/state\";\nimport { Router } from \"../router\";\nimport { flattenElementTree } from \"../utils\";\n\nexport class FDocument {\n  window: Window\n  document: Document\n  rootSelector: string;\n  rootElement: FHTMLElement;\n  router?: Router\n\n  constructor() {\n    if (window) {\n      this.window = window\n      this.document = document\n    }\n  }\n\n  render(selector: string, element: FHTMLElement) {\n    if (this.document instanceof Document) {\n      let target = this.document.querySelector(selector)\n      this.rootSelector = selector;\n      this.rootElement = element;\n      if (target instanceof HTMLElement || element instanceof Node) {\n        let router = this.hasRouter(element)\n        let domElementRoot = element.element()\n        let states = this.getStates(element)\n        target.appendChild(domElementRoot)\n        Felin.registerFlDocumentRoot(selector, this)\n        Felin.registerStates(selector, states)\n        if(router){\n          router.buildRouterTree()\n          Felin.registerActiveRouter(this.rootSelector, router)\n        }\n        Felin.run()\n      } else\n        throw Error(\"FelinError: no element found with selector \" + selector)\n    }\n  }\n\n  selector(element: FHTMLElement|FSVGElement) {\n    let elementPath: (FHTMLElement|FSVGElement)[] = []\n    let currentElement = element\n    let selector = `${this.rootSelector}>${this.rootElement.name}`\n    while (currentElement._id != this.rootElement._id) {\n      if (currentElement instanceof FHTMLElement || currentElement instanceof FSVGElement) {\n        elementPath.push(currentElement)\n      }\n      currentElement = currentElement.parent \n    }\n    for (let pathElement of elementPath) {\n      selector += `>${pathElement.name}`\n    }\n    return selector\n  }\n\n  rerenderElement(element: FHTMLElement){\n    let selector = this.selector(element)\n    let targetNode = this.document.querySelector(selector)\n    targetNode.replaceWith(element.element())\n  }\n\n  hasRouter(element: FElement){\n    let router: Router|null = null\n    let elementTreeList = flattenElementTree(element)\n    elementTreeList.forEach(el=>{\n      if(el instanceof FHTMLElement){\n        if(el.register.router) router = el.register.router\n      }\n    })\n    return router\n  }\n\n  getStates(element: FElement){\n    let states: State[] = [];\n    let elementTreeList = flattenElementTree(element)\n    for(let el of elementTreeList){\n      states = [...states, ...(el as FElement<{states: State[]}>).register.states]\n    }\n    let uniqueStates = [...new Set(states.map(e=>e._id))]\n    states = uniqueStates.map(id=>states.find(s=>s._id == id))\n    return states\n  }\n}\n","import { State } from \"./primitives/state\";\nimport { Effect } from \"./primitives/effect\";\nimport { Computed } from \"./primitives/computed\";\nimport { Loop, Conditional } from \"./primitives/control-flow\";\nimport { Route, Router } from \"./router\";\nimport { FElement, FHTMLElement, FText } from \"./elements/element\";\nimport { FDocument } from \"./felin\";\n\nexport function $text(text: string, ...args: any[]) {\n  return new FText(text, ...args)\n}\n\nexport function $state<T>(value: T) {\n  return new State<T>(value);\n}\n\nexport function $effect(fn: ()=>void, ...states: State[]){\n  new Effect(fn, ...states)\n}\n\nexport function $computed(fn: (...args: State[])=>void, ...states: State[]){\n  return new Computed(fn, ...states)\n}\n\nexport function $router(...routes: Route[]){\n  return new Router(...routes)\n}\n\nexport function $route(path: string, element: FElement){\n  return new Route(path, element)\n}\n\nexport function $params(){\n  return Felin.getRouterParams()\n}\n\nexport function $document(){\n  return new FDocument()\n}\n\nexport function $link(path: string, element: FElement|string){\n  let linkElement = new FHTMLElement(\"a\", [element])\n  return linkElement.listener(\"click\", (e)=>{\n    e.preventDefault()\n    let rootSelector = Felin.getElementRootSelector(linkElement)\n    if(typeof rootSelector == 'string')\n      Felin.registerRouteChange(path, rootSelector)\n  }).style({\n      textDecoration: 'underline',\n      color: \"blue\",\n      cursor: 'pointer'\n    })\n}\n\nexport function $if(condition: ()=>boolean, trueBranch: FElement, falseBranch: FElement){\n  return new Conditional(condition, trueBranch, falseBranch)\n}\n\nexport function $for<T>(state: State<Array<T>>, iteration: (element: T)=>FElement){\n  return new Loop(state, iteration)\n}\n\nexport function $length<T>(state: State<Array<T>>){\n  return new State(state.length)\n}\n","import { Felin } from \"./core/registry\";\nwindow.Felin = Felin;\n\nexport default Felin \nexport * from \"./primitives\";\nexport * from \"./elements\";\nexport * from \"./core\";\nexport * from \"./helpers\";\nexport * from \"./router\";\nexport * from \"./utils\";\n"],"names":["DOMUpdate","args","element","nodeSelector","domElement","ComputedRefresh","newValue","EffectCall","RouteChange","activeRoutes","previousRoutes","previousRoute","routeParent","child","activeRoute","routesParentNodes","route","targetNode","InitEffectRegistry","InitComputedRegistry","ValueType","ValueType2","toCssString","style","styleString","property","key","char","isObjectLiteral","obj","ObjProto","determineValueType","value","getObjectMethods","objectPrototype","k","flattenElementTree","acc","i","nextElementParentIndex","e","nextElementParent","FSVGElement","FHTMLElement","accumulator","ExtensibleFunction","f","Computed","fn","states","State","parent","FObject","FArray","FNumber","FString","FBoolean","handler","target","prop","reciever","fnOrState","cmp","Router","routes","path","homeRoute","r","pathSegments","foundMatch","matchChildRoute","routeSegments","catchAll","childRoute","Route","FText","text","arg","textContent","state","name","children","eventname","callback","entry","elementChildren","classname","attrs","quickSortByPriority","array","pivot","left","right","Stack","highestPriorityTask","task","Registry","effect","root","s_id","s","computed","fdocument","targets","domUpdate","computedRefresh","cStates","cState","cTargets","cTarget","computedDomUpdate","effectCall","document","initTask","rootSelector","router","routeChangeTask","doesHaveChild","selector","selectedDocument","routers","params","Felin","Effect","Conditional","condition","_true","_false","Loop","iteration","Component","props","a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","img","input","ins","kbd","label","legend","li","link","main","map","mark","menu","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","samp","search","section","select","slot","small","source","span","strong","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","u","ul","_var","video","wbr","_a","animate","animateMotion","animateTransform","circle","clipPath","defs","desc","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","filter","foreignObject","g","image","line","linearGradient","marker","mask","metadata","mpath","pattern","polygon","polyline","radialGradient","rect","set","stop","svg","_switch","symbol","_text","textPath","_title","tspan","use","view","FDocument","domElementRoot","elementPath","currentElement","pathElement","el","elementTreeList","id","$text","$state","$effect","$computed","$router","$route","$params","$document","$link","linkElement","$if","trueBranch","falseBranch","$for","$length"],"mappings":"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"}