{"mappings":"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","sources":["src/felin.ts","src/core/registry.ts","src/core/tasks.ts","src/elements/element.ts","src/primitives/state.ts","src/utils.ts","src/primitives/computed.ts","src/router/index.ts","src/core/stack.ts","src/primitives/index.ts","src/primitives/effect.ts","src/primitives/control-flow.ts","src/elements/index.ts","src/elements/component.ts","src/elements/html.ts","src/elements/svg.ts","src/core/index.ts","src/core/document.ts","src/helpers.ts"],"sourcesContent":["import { Felin } from \"./core/registry\";\nwindow.Felin = Felin;\n\nexport default Felin \nexport * from \"./primitives\";\nexport * from \"./elements\";\nexport * from \"./core\";\nexport * from \"./helpers\";\nexport * from \"./router\"\nexport * from \"./utils\"\n","import { ComputedRefresh, DOMUpdate, EffectCall, InitEffectRegistry, InitComputedRegistry, Task, RouteChange } from \"./tasks\";\nimport { FText, FHTMLElement, FSVGElement, FElement } from \"../elements/element\";\nimport { Computed } from \"../primitives/computed\";\nimport { Effect } from \"../primitives/effect\";\nimport { State } from \"../primitives/state\";\nimport { Router } from \"../router\";\nimport { FDocument } from \"./document\";\nimport { Stack } from \"./stack\";\n\ntype DocumentRegister = {\n  document: FDocument,\n  states: State[],\n  effects: Effect[],\n  computed: Computed[],\n  router: Router\n}\n\nexport class Registry {\n  stack: Stack\n  register: { [key: string]: DocumentRegister }\n\n  constructor() {\n    this.stack = new Stack();\n    this.register = {}\n  }\n\n  initEffectRegistry(effect: Effect){\n    let root = Object.keys(this.register).find(r=>effect.states.map(s=>s._id).some(s_id=>this.register[r].states.map(s=>s._id).includes(s_id)))\n    if(root){\n      if(!this.register[root].effects) this.register[root].effects = []\n      this.register[root].effects.push(effect)\n    } else {\n      this.stack.push(new InitEffectRegistry(effect))\n    }\n  }\n  \n  initComputedRegistry(computed: Computed){\n    let root = Object.keys(this.register).find(r=>computed.states.map(s=>s._id).some(s_id=>this.register[r].states.map(s=>s._id).includes(s_id)))\n    if(root){\n      if(!this.register[root].computed) this.register[root].computed = []\n      this.register[root].computed.push(computed)\n    } else {\n      this.stack.push(new InitComputedRegistry(computed))\n    }\n  }\n\n  registerStates(root: string, states: State[]) {\n    this.register[root].states = states\n  }\n\n  registerStateUpdate(state: State) {\n    let root = Object.keys(this.register).find(r => this.register[r].states.some(s => s._id == state._id))\n    if (root) {\n      let fdocument = this.register[root].document\n      let states = this.register[root].states.filter(s => s._id == state._id);\n      for (let state of states) {\n      let targets = state.elements as FElement[]\n        for(let target of targets){\n          if (target instanceof FText) {\n            target = target.parent as FHTMLElement\n          }\n          let domUpdate = new DOMUpdate({ document: fdocument, state: state})\n          this.stack.push(domUpdate);\n        }\n      }\n      let computed = this.register[root].computed.find(e => e.states.some(s => s._id == state._id))\n      if (computed) {\n        let computedRefresh = new ComputedRefresh(computed)\n        this.stack.push(computedRefresh)\n        let cStates = this.register[root].computed.filter(s => s._id == computed._id);\n        for (let cState of cStates) {\n          let cTargets = cState.elements as FElement[]\n          for(let cTarget of cTargets){\n            if (cTarget instanceof FText) {\n              cTarget = cTarget.parent as FHTMLElement\n            }\n            let computedDomUpdate = new DOMUpdate({ document: fdocument, state: cState })\n            this.stack.push(computedDomUpdate)\n          }\n        }\n      }\n\n      let effect = this.register[root].effects.find(e => e.states.some(s => s._id == state._id))\n      if (effect) {\n        let effectCall = new EffectCall(effect)\n        this.stack.push(effectCall)\n      }\n    }\n\n  }\n\n  registerFlDocumentRoot(root: string, document: FDocument) {\n    if (!Object.keys(this.register).includes(root)) {\n      this.register[root] = {} as DocumentRegister\n    }\n    this.register[root].document = document\n  }\n\n  run() {\n    this.stack.run()\n  }\n\n  registerEffect(effect: Effect) {\n    let initTask = new InitEffectRegistry(effect)\n    setTimeout(() => {\n      this.stack.push(initTask)\n    }, 1000);\n  }\n\n  registerComputed(computed: Computed){\n    let initTask = new InitComputedRegistry(computed)\n    setTimeout(() => {\n      this.stack.push(initTask)\n    }, 1000);\n  }\n\n  registerActiveRouter(rootSelector: string, router: Router) {\n    if (!Object.keys(this.register).includes(rootSelector)) {\n      this.register[rootSelector] = {} as DocumentRegister\n    }\n    this.register[rootSelector].router = router\n    this.registerRouteChange(window.location.href.slice(window.location.host.length + window.location.protocol.length + 2), rootSelector)\n  }\n\n  registerRouteChange(path: string, rootSelector: string) {\n    let args = { path, router: this.register[rootSelector].router, document: this.register[rootSelector].document }\n    let routeChangeTask = new RouteChange(args)\n    this.stack.push(routeChangeTask)\n  }\n\n  getElementRootSelector(element: FElement, parent?: FHTMLElement): string | boolean {\n    let rootSelector: string\n    let doesHaveChild: boolean = false\n    if (parent) {\n      for (let child of parent._children) {\n        if (child._id == element._id) {\n          doesHaveChild = true\n        } else {\n          if (child instanceof FHTMLElement) {\n            doesHaveChild = this.getElementRootSelector(element, child) as boolean\n          }\n        }\n      }\n      return doesHaveChild\n    } else {\n      for (let selector of Object.keys(this.register)) {\n        let selectedDocument = this.register[selector].document;\n        for (let child of selectedDocument.rootElement._children) {\n          if (child._id == element._id) {\n            rootSelector = selector\n          } else {\n            if (child instanceof FHTMLElement) {\n              if (this.getElementRootSelector(element, child) == true) {\n                rootSelector = selector\n              }\n            }\n          }\n        }\n      }\n      return rootSelector\n    }\n  }\n\n  getRouterParams(): { [key: string]: string | number } {\n    let routers = Object.keys(this.register).map(selector => this.register[selector].router)\n    let params = {}\n    for (let router of routers) {\n      if (router.active.length > 0) {\n        params = router.params\n      }\n    }\n    return params\n  }\n}\n\nexport const Felin = new Registry()\n","import { Computed } from \"../primitives/computed\"\nimport { State } from \"../primitives/state\"\nimport { FDocument } from \"./document\"\nimport { FElement, FHTMLElement } from \"../elements/element\"\nimport { Router } from \"../router\"\nimport { Effect } from \"../primitives/effect\"\n\nexport interface Task<A = { [key: string]: any }, R = void> {\n  priority: number\n  args: A\n  call(): R\n}\n\ntype DOMUpdateArgs = { state: State|Computed, document: FDocument }\n\nexport class DOMUpdate implements Task<DOMUpdateArgs, void> {\n  priority: number\n  args: DOMUpdateArgs\n\n  constructor(args: DOMUpdateArgs) {\n    this.priority = 1\n    this.args = args\n  }\n\n  call() {\n    for(let element of this.args.state.elements){\n      let newValue = (this.args.state as Function)()\n      let nodeSelector = this.args.document.selector(element as FHTMLElement)\n\n      let domElement = this.args.document.document.querySelector(nodeSelector)\n      if (domElement) {\n        domElement.replaceWith(element.element())\n      }\n    }\n  }\n}\n\n\nexport class ComputedRefresh implements Task<Computed, void> {\n  priority: number\n  args: Computed\n\n  constructor(args: Computed){\n    this.args = args\n    this.priority = 2\n  }\n\n  call() {\n    let newValue = this.args.fn(...this.args.states)\n    this.args.value = newValue\n  }\n\n}\n\nexport class EffectCall implements Task {\n  priority: number\n  args: Effect\n\n  constructor(args: Effect) {\n    this.args = args\n    this.priority = 3\n  }\n\n  call() {\n    this.args.effect()\n  }\n}\n\ntype RouteChangeArgs = {document: FDocument, router: Router, path: string}\n\nexport class RouteChange implements Task {\n  priority: number\n  args: RouteChangeArgs\n\n  constructor(args:RouteChangeArgs) {\n    this.args = args\n    this.priority = 4\n  }\n\n  call() {\n   this.args.router.matchRoute(this.args.path)\n    let activeRoutes = this.args.router.active\n    let previousRoutes = this.args.router.previous\n    if(previousRoutes.length>0){\n      for(let previousRoute of previousRoutes){\n        let routeParent = previousRoute.parent\n        routeParent._children = routeParent._children.filter(child=>child._id != previousRoute.element._id)\n      }\n    }\n    for(let activeRoute of activeRoutes){\n      let routeParent = activeRoute.parent\n      routeParent._children.splice(activeRoute.index, 0, activeRoute.element)\n    }\n    let routesParentNodes = activeRoutes.map(route=>route.parent)\n    for(let targetNode of routesParentNodes){\n      this.args.document.rerenderElement(targetNode)\n    }\n    this.args.document.window.history.pushState(\"\", \"\", this.args.path)\n  }\n}\n\ntype InitEffectRegistryArgs = Effect\nexport class InitEffectRegistry implements Task {\n  priority: number\n  args: InitEffectRegistryArgs \n\n  constructor(args: InitEffectRegistryArgs ){\n    this.priority = 0\n    this.args = args\n  }\n\n  call(){\n    Felin.initEffectRegistry(this.args)\n  }\n}\n\ntype InitComputedRegistryArgs = Computed\nexport class InitComputedRegistry implements Task {\n  priority: number\n  args: InitComputedRegistryArgs \n\n  constructor(args: InitComputedRegistryArgs){\n    this.priority = 0\n    this.args = args\n  }\n\n  call(){\n    Felin.initComputedRegistry(this.args)\n  }\n}\n","import { Properties as CssStyle } from \"csstype\";\nimport { State } from \"../primitives/state\";\nimport { ExtensibleFunction, toCssString } from \"../utils\";\nimport { Route, Router } from \"../router\";\nimport { Computed } from \"../primitives/computed\";\nimport { Conditional, Loop } from \"../primitives/control-flow\";\n\nexport type FEvent = Event | CustomEvent\n\nexport interface FElement<Register = {}> {\n  _id: string,\n  register: Register,\n  parent?: FElement,\n  element(): HTMLElement | SVGElement | Text\n}\n\ntype FTextChildren = (State | Computed | string | number)[]\ntype FTextRegister = Partial<{states: State[], computed: Computed[]}>\n\nexport class FText implements FElement<FTextRegister> {\n  _id: string\n  register: FTextRegister\n  parent?: FHTMLElement | FSVGElement;\n  text: string\n\n  constructor(text: string, ...args: FTextChildren) {\n    this._id = crypto.randomUUID()\n    this.register = {}\n    if (args.length > 0)\n      for (let arg of args) {\n        if (arg instanceof State) {\n          arg.setElement(this)\n          if(!this.register.states) this.register.states = []\n          this.register.states.push(arg)\n          text = text.replace(\"{}\", arg())\n          continue;\n        }\n        text = text.replace(\"{}\", arg as string)\n      }\n    this.text = text.toString()\n  }\n\n  element() {\n    let textContent = this.text\n    for (let state of this.register.states) {\n      textContent = textContent.replace(\"{}\", state())\n    }\n    return document.createTextNode(textContent)\n  }\n}\n\ntype FHTMLElementChidren = (FElement | Router | Route | Conditional | Loop | State | Computed | string | number)[]\ntype FHTMLElementRegister = Partial<{states: State[], computed: Computed[], router: Router, routes: Route[], conditionals: Conditional[], loops: Loop[]}>\nexport class FHTMLElement implements FElement<FHTMLElementRegister> {\n  _id: string;\n  name: keyof HTMLElementTagNameMap;\n  parent: FHTMLElement | FSVGElement;\n  register: FHTMLElementRegister\n  _children: FElement[];\n  _style: CssStyle | null;\n  _listeners: Map<keyof HTMLElementEventMap, (event: FEvent) => void>\n  _classname: string\n  _attributes: { [attr: string]: any }\n\n  constructor(name: keyof HTMLElementTagNameMap, children?: FHTMLElementChidren) {\n    this._id = crypto.randomUUID()\n    this.name = name\n    this.register = {}\n    if (Array.isArray(children)) {\n      this._children = []\n      for (let i = 0; i < children.length; i++) {\n        let child = children[i]\n        if (child instanceof State) {\n          this._children.push(new FText(\"{}\", child as State))\n          child.setElement(this)\n          if(!this.register.states) this.register.states = []\n          this.register.states.push(child)\n        } else if(child instanceof Computed){\n          this._children.push(new FText(\"{}\", child as Computed))\n          child.setElement(this)\n          if(!this.register.computed) this.register.computed = []\n          this.register.computed.push(child)\n        } else if (child instanceof Router) {\n          if (this.register.router) {\n            throw Error(\"Cannot have multiple routers in the same element tree.\")\n          } else {\n            child.parent = this\n            child.index = i\n            this.register.router = child\n            for (let route of this.register.router.routes) {\n              route.parent = this\n              route.index = i\n            }\n          }\n        } else if (child instanceof Route) {\n          child.parent = this\n          child.index = i\n          if (!Array.isArray(this.register.routes))\n            this.register.routes = []\n          this.register.routes.push(child)\n        } else if (child instanceof FHTMLElement || child instanceof FSVGElement || child instanceof FText) {\n          (child as FElement).parent = this\n          this._children.push(child)\n        } else if (typeof child == \"string\" || typeof child == \"number\") {\n          let textContent = new FText(child.toString())\n          this._children.push(textContent)\n        }\n      }\n    } else {\n      this._children = []\n    }\n    this._style = null\n    this._listeners = new Map()\n    this._attributes = {}\n  }\n\n  style(style: CssStyle) {\n    this._style = style\n    return this\n  }\n\n  children(children?: FElement[]) {\n    for (let child of children) {\n      if (child instanceof State || child instanceof Computed) {\n        let textContent = new FText(\"{}\", (child as ExtensibleFunction)())\n        textContent.parent = this\n        this._children.push(textContent)\n      } else {\n        this._children.push(child)\n      }\n    }\n    return this\n  }\n\n  listener(eventname: keyof HTMLElementEventMap, callback: (event: FEvent) => void) {\n    if (!this._listeners.has(eventname)) {\n      this._listeners.set(eventname, callback)\n    }\n    return this\n  }\n\n  element(): HTMLElement {\n    let element = document.createElement(this.name)\n\n    for (let entry of this._listeners.entries())\n      element.addEventListener(entry[0], entry[1])\n\n    if (this._style)\n      element.style.cssText = toCssString(this._style)\n\n    if (this._classname)\n      element.classList.add(...this._classname.split(\" \"))\n\n    for (let key of Object.keys(this._attributes))\n      element.setAttribute(key, this._attributes[key] as string)\n\n    let elementChildren = this._children as FElement[]\n    if (elementChildren.length == 0) {\n      return element\n    } else {\n      for (let child of elementChildren) {\n        element.appendChild(child.element())\n      }\n      return element\n    }\n  }\n\n  class(classname: string) {\n    this._classname = classname\n  }\n\n  attr(name: string, value: any) {\n    this._attributes[name] = value\n  }\n\n  attrs(attrs: { [attr: string]: any }) {\n    this._attributes = { ...this._attributes, ...attrs }\n  }\n}\n\ntype FSVGElementChildren = FHTMLElement | FSVGElement | FText | State | Computed | Conditional | string | number| Loop;\ntype FSVGElementRegister = Partial<{states: State[], computed: Computed[], conditionals: Conditional[], loops: Loop[]}>;\nexport class FSVGElement implements FElement<FSVGElementRegister> {\n  _id: string;\n  name: keyof SVGElementTagNameMap;\n  parent: FSVGElement | FHTMLElement;\n  register: FSVGElementRegister;\n  _children: FElement[];\n  _style: CssStyle | null;\n  _listeners: Map<keyof SVGElementEventMap, (event: FEvent) => void>\n  _classname: string\n  _attributes: { [attr: string]: any }\n\n  constructor(name: keyof SVGElementTagNameMap, children?: FElement[]) {\n    this._id = crypto.randomUUID();\n    this.name = name;\n    this.register = {}\n    this._children = []\n    for (let child of children) {\n      if (child instanceof State) {\n        let textContent = new FText(\"{}\", child)\n        textContent.parent = this\n        this._children.push(textContent)\n        if(!this.register.states) this.register.states = []\n        this.register.states.push(child)\n        this.register.states.push(child as State)\n      }else if (child instanceof Computed){\n        let textContent = new FText(\"{}\", child)\n        textContent.parent = this\n        this._children.push(textContent)\n        if(!this.register.computed) this.register.computed = []\n        this.register.computed.push(child)\n      } else {\n        this._children.push(typeof child == \"string\" ? new FText(child) : child)\n      }\n    }\n    this._style = null\n    this._listeners = new Map()\n    this._attributes = {}\n  }\n\n  style(style: CssStyle) {\n    this._style = style\n    return this\n  }\n\n  children(children?: FElement[]) {\n    for (let child of children) {\n      if (child instanceof State) {\n        this._children.push(new FText(\"{}\", child))\n      } else {\n        this._children.push(child)\n      }\n    }\n    return this\n  }\n\n  listener(eventname: keyof SVGElementEventMap, callback: (event: FEvent) => void) {\n    if (!this._listeners.has(eventname)) {\n      this._listeners.set(eventname, callback)\n    }\n    return this\n  }\n\n  element(parent?: FSVGElement): SVGElement {\n    if (parent) {\n      this.parent = parent\n    }\n    let element = document.createElementNS(\"http://www.w3.org/2000/svg\", this.name)\n    //element.style.cssText = toCssString(this._style)\n    for (let entry of this._listeners.entries()) {\n      element.addEventListener(entry[0], entry[1])\n    }\n    if (this._style) {\n      element.style.cssText = toCssString(this._style)\n    }\n    if (this._classname) {\n      element.classList.add(...this._classname.split(\" \"))\n    }\n\n    for (let key of Object.keys(this._attributes)) {\n      element.setAttribute(key, this._attributes[key] as string)\n    }\n\n    let elementChildren = this._children as FElement[]\n    if (elementChildren.length == 0) {\n      return element\n    } else {\n      for (let child of elementChildren) {\n        //@ts-ignore\n        element.appendChild(child.element(this))\n      }\n      return element\n    }\n  }\n\n  class(classname: string) {\n    this._classname = classname\n  }\n\n  attr(name: string, value: any) {\n    this._attributes[name] = value\n  }\n\n  attrs(attrs: { [attr: string]: any }) {\n    this._attributes = { ...this._attributes, ...attrs }\n  }\n}\n\n","import { FElement } from \"../elements/element\";\nimport { ExtensibleFunction, ValueType, determineValueType, getObjectMethods } from \"../utils\"\nimport { Computed } from \"./computed\";\n\ntype FStateMutation<T, R> = (state: T) => R\n\ninterface FState<T = any> {\n  state: StateType<T>,\n  _id: string,\n  parent?: ParentState,\n  set: <R>(fnOrState: FStateMutation<T, R> | T, child?: State<T>) => void,\n}\n\n\ntype ParentState = {\n  state: FState,\n  key: string\n}\n\ntype FStateType = string | boolean | number | {[key: string]: any} | any[] \ntype StateType<T = FStateType> = FNumber | FArray | FObject | FBoolean | FString\n\nexport class State<T = FStateType> extends ExtensibleFunction implements FState<T> {\n  _id: string;\n  state: StateType<T>;\n  parent?: ParentState;\n  elements: FElement[] = []\n\n  constructor(value: T, parent?: ParentState) {\n    super(() => this.state.value )\n    this._id = crypto.randomUUID();\n    if (parent) {\n      this.parent = parent;\n    }\n    switch (determineValueType(value)) {\n      case ValueType.OBJECT:\n        this.state = new FObject(value)\n        this.state.parent = this\n        break;\n      case ValueType.ARRAY:\n        this.state = new FArray<any>(value as any[])\n        this.state.parent = this \n        break;\n      case ValueType.NUMBER:\n        this.state = new FNumber(value as number)\n        this.state.parent = this \n        break;\n      case ValueType.STRING:\n        this.state = new FString(value as string)\n        this.state.parent = this\n        break;\n      case ValueType.BOOLEAN:\n        this.state = new FBoolean(value as boolean)\n        this.state.parent = this\n        break;\n      case ValueType.ANY:\n        throw Error(\"Error: unsupported state data type.\")\n        break;\n      default:\n        break;\n    }\n\n    if (this.state instanceof FObject) {\n      let handler: ProxyHandler<State<T>> = {\n        get: (target: State<T>, prop: string, reciever) => {\n          if(prop==\"set\"){\n              return this.set\n          }else if (getObjectMethods(target.state).includes(prop)) {\n            return target.state[prop]\n          } else if (!Object.keys(target()).includes(prop)) {\n            return Reflect.get(target, prop, reciever);\n          } else {\n            let value = target.state[prop];\n            let childState = new State<typeof value>(value, { state: this, key: prop });\n            return childState;\n          }\n        }\n      }\n      return new Proxy(this, handler);\n    } else if (this.state instanceof FArray) {\n      let handler: ProxyHandler<State<T>> = {\n        get: (target: State<T>, prop: string, reciever) => {\n          if(prop==\"set\"){\n              return this.set\n          }else \n          if (getObjectMethods(target.state).includes(prop)) {\n            return target.state[prop]\n          } else if (!Object.keys(target()).includes(prop)) {\n            return Reflect.get(target, prop, reciever);\n          } else {\n            let value = target.state[prop];\n            let childState = new State<typeof value>(value, { state: this, key: prop });\n            return childState;\n          }\n        }\n      }\n      return new Proxy(this, handler);\n    } else if (this.state instanceof FNumber) {\n      let handler: ProxyHandler<State<T>> = {\n        get: (target: State<T>, prop: string, reciever) => {\n          if(prop==\"set\"){\n              return target.set\n          }else \n          if (getObjectMethods(target.state).includes(prop)) {\n            return target.state[prop]\n          } else {\n            return Reflect.get(target, prop, reciever)\n          }\n        }\n      }\n      return new Proxy(this, handler)\n    } \n  }\n\n  set<R>(fnOrState: FStateMutation<FStateType, R> | FStateType, child?: State<T>) {\n    let newValue: FStateType = this.state.value as FStateType\n    if (child) {\n      for (let key of Object.keys(this.state.value)) {\n        if (key == child.parent.key) {\n          newValue[key] = child.state.value\n        }\n      }\n    }\n    if (fnOrState) {\n      if (typeof fnOrState === \"function\") {\n        newValue = (fnOrState)(this.state.value) \n      } else {\n        newValue = fnOrState;\n      }\n      this.state.value = newValue\n    }\n    if (this.parent) {\n      this.state.value = newValue;\n      this.parent.state.set(undefined, this)\n    } else {\n      this.state.value = newValue\n      Felin.registerStateUpdate(this)\n    }\n  }\n\n  setElement(element: FElement) {\n    this.elements.push(element)\n  }\n}\n\nexport class FArray<T = any> {\n  value: Array<T>\n  parent?: State<T>\n  constructor(value: T[]) {\n    this.value = value\n    let handler: ProxyHandler<FArray<T>> = {\n      get: (target: FArray<T>, prop: string, reciever) => {\n        if (getObjectMethods(target).includes(prop)) {\n          return target[prop]\n        } else if (Object.keys(target.value).includes(prop)) {\n          let value = target.value[prop];\n          return value;\n        } else {\n          return Reflect.get(target, prop, reciever);\n        }\n      }\n    }\n    return new Proxy(this, handler);\n  }\n\n  map() {\n\n  }\n\n  filter() {\n\n  }\n\n  reduce() {\n\n  }\n\n  find() {\n\n  }\n\n  every() {\n\n  }\n\n  some() {\n\n  }\n}\n\nexport class FBoolean {\n  value: boolean\n  parent?: State\n  constructor(value: boolean) {\n    this.value = value\n  }\n}\n\nexport class FObject<T extends { [key: string]: any } = {}> {\n  value: T\n  parent?: State<T>\n  constructor(value: T) {\n    this.value = value\n    let handler = {\n      get: (target, prop, reciever) => {\n        if (!Object.keys(target.value).includes(prop)) {\n          return Reflect.get(target, prop, reciever)\n        } else {\n          let value = target.value[prop]\n          return value\n        }\n      }\n    }\n    return new Proxy(this, handler)\n  }\n\n  keys() {\n    return new Computed(() => Object.keys(this.value), this.parent)\n  }\n\n  values() {\n    return new Computed(() => Object.values(this.value), this.parent)\n  }\n\n  has(key: string) {\n    return new Computed(() => Object.keys(this.value).includes(key), this.parent)\n  }\n}\n\nexport class FString {\n  value: string\n  parent?: State\n  constructor(value: string) {\n    this.value = value\n  }\n}\n\nexport class FNumber {\n  value: number\n  parent?: State\n  constructor(value: number) {\n    this.value = value\n  }\n\n  gt(cmp: number) {\n    return new Computed(() => this.value > cmp, this.parent)\n  }\n\n  gte(cmp: number) {\n    return new Computed(() => this.value >= cmp, this.parent)\n  }\n\n  lt(cmp: number) {\n    return new Computed(() => this.value < cmp, this.parent)\n  }\n\n  lte(cmp: number) {\n    return new Computed(() => this.value <= cmp, this.parent)\n  }\n\n  eq(cmp: number) {\n    return new Computed(() => this.value == cmp, this.parent)\n  }\n}\n","import { Properties as CssStyle } from \"csstype\";\nimport { FElement, FHTMLElement, FSVGElement, FText } from \"./elements/element\";\n\nexport enum ValueType {\n  NUMBER,\n  STRING,\n  BOOLEAN,\n  OBJECT,\n  MAP,\n  SET,\n  ARRAY,\n  ANY\n}\n\nexport function toCssString(style: CssStyle) {\n  let styleString = \"\";\n  for (let property of Object.keys(style)) {\n    let key = property.split('').map((char, i) => {\n      if (property.charCodeAt(i) >= 65 && property.charCodeAt(i)<=90) {\n        return '-' + char.toLowerCase()\n      }\n      return char;\n    });\n    styleString += key.join('') + \": \" + style[property] + \";\"\n  }\n  return styleString\n}\n\nfunction isObjectLiteral(obj) {\n    if (typeof obj !== \"object\" || obj === null)\n        return false;\n\n    var hasOwnProp = Object.prototype.hasOwnProperty,\n    ObjProto = obj;\n\n    // get obj's Object constructor's prototype\n    while (Object.getPrototypeOf(ObjProto = Object.getPrototypeOf(ObjProto)) !== null);\n\n    return Object.getPrototypeOf(obj) === ObjProto;\n};\n\nexport function determineValueType<T>(value: T){\n  if(typeof value == \"string\"){\n    return ValueType.STRING\n  }else if(typeof value == \"number\"){\n    return ValueType.NUMBER\n  }else if(typeof value == \"boolean\"){\n    return ValueType.BOOLEAN\n  }else if(Array.isArray(value)){\n    return ValueType.ARRAY\n  }else if(isObjectLiteral(value)){\n    return ValueType.OBJECT\n  }else {\n    return ValueType.ANY\n  }\n}\n\nexport function getObjectMethods(obj){\n  let objectPrototype = obj.prototype\n  let methods = Object.getOwnPropertyNames(objectPrototype).filter(k=>typeof obj[k] == \"function\" && k!=\"constructor\");\n  return methods\n}\n\nexport function flattenElementTree(element: FElement, acc?: FElement[]): FElement[] {\n  if(acc){\n    let lastElementParent = element;\n    let i = 1;\n    let nextElementParentIndex = acc.findIndex(e=>e._id == element._id)+i\n    let nextElementParent: FElement|null = null;\n    while( nextElementParentIndex < acc.length ){\n      nextElementParent = acc[nextElementParentIndex]\n      if(nextElementParent instanceof FSVGElement || nextElementParent instanceof FHTMLElement){\n        if(nextElementParent._children.length!=0){\n          nextElementParent = acc[nextElementParentIndex]\n          acc = [...acc, ...(nextElementParent as  FHTMLElement | FSVGElement)._children]\n          return flattenElementTree(nextElementParent, acc)\n        }else{\n          continue;\n        }\n      }\n      i++;\n      nextElementParentIndex = acc.findIndex(e=>e._id == element._id)+i\n    }\n    return acc\n  }else{\n    let accumulator = [];\n    if(element instanceof FHTMLElement || element instanceof FSVGElement){\n      if(element._children.length>0){\n        accumulator = [element, ...element._children]\n        return flattenElementTree(element, accumulator)\n      }else {\n        accumulator = [element]\n        return accumulator\n      }\n    }else{\n      accumulator = [element]\n      return accumulator\n    }\n  }\n  return []\n}\n\nexport class ExtensibleFunction extends Function {\n  constructor(f) {\n    super()\n    return Object.setPrototypeOf(f, new.target.prototype)\n  }\n}\n","import { FElement } from \"../elements/element\";\nimport { ExtensibleFunction } from \"../utils\"\nimport { State } from \"./state\";\n\nexport class Computed extends ExtensibleFunction {\n  _id: string\n  value: any\n  fn: (...args: State[]) => any\n  states: State[]\n  elements: FElement[] = []\n\n  constructor(fn: (...args: State[]) => any, ...states: State[]) {\n    super(() => {\n      this.value = this.fn(...this.states)\n      return this.value\n    })\n    this.fn = fn\n    this.states = states\n    this.value = fn(...states)\n    this._id = crypto.randomUUID()\n    Felin.registerComputed(this)\n  }\n\n  setElement(element: FElement){\n    this.elements.push(element)\n  }\n}\n","import { FElement, FHTMLElement } from \"../elements/element\"\n\n\nexport type RouterTreeLocation = {router: Router, location: FHTMLElement}\n\nexport class Router {\n  routes:  Route[]\n  index?: number\n  active: Route[]\n  previous: Route[]\n  history: Route[]\n  parent?: FHTMLElement;\n  params: {[key: string]: string|number}\n\n  constructor(...routes: Route[]){\n    this.routes = routes\n    this.params = {}\n    this.previous = []\n    this.active = []\n  }\n\n  matchRoute(path: string){\n    if(this.active.length>0){\n      this.previous = [...this.active]\n      this.active = []\n    }\n    if(path=='/'){\n      let homeRoute = this.routes.find(r=>r.path==\"/\")\n      if(homeRoute){\n        this.active = [homeRoute]\n        return;\n      }\n      return;\n    }\n    let pathSegments = path.split('/').filter(s=>s!='')\n    console.log(pathSegments)\n    let foundMatch: Route|undefined = undefined\n    for(let i=0; i<pathSegments.length; i++){\n      if(!foundMatch){\n        for(let route of this.routes){\n          let routeSegments = route.path.split('/')\n          if(pathSegments[i]==routeSegments[i]){\n            foundMatch = route\n            break;\n          }\n        }\n      } else {\n        foundMatch = undefined\n        for(let matchChildRoute of foundMatch.children){\n          let routeSegments = matchChildRoute.path.split('/')\n          if(routeSegments[i].startsWith(\":\")){\n            this.params = {[routeSegments[i].slice(1)]: Number.isNaN((+pathSegments[i]) as number) ? +pathSegments[i]: pathSegments[i]}\n            foundMatch = matchChildRoute\n            break;\n          }else if(routeSegments[i] == pathSegments[i]){\n            foundMatch = matchChildRoute;\n            break;\n          }\n        }\n      }\n      if(foundMatch!=undefined){\n        this.active.push(foundMatch)\n        continue;\n      }else if(i==0){\n        let catchAll = this.routes.find(r=>r.path == \"*\")\n        if(catchAll!=undefined){\n          this.active = [catchAll]\n        }\n        break;\n      } else if (this.active.length<i+1){\n        break;\n      }\n    }\n  }\n\n  buildRouterTree(): Router {\n    for(let route of this.routes){\n      let element = route.element\n      if(element instanceof FHTMLElement){\n        if(element.register.router){\n          throw Error(\"Cannot have nested routers inside the same element tree\");\n        } else {\n          if(element.register.routes && element.register.routes.length>0){\n            for(let childRoute of element.register.routes){\n              childRoute.parentRoute = route\n              route.children.push(childRoute)\n            }\n          }\n        }\n      }\n    }\n    return this\n  }\n}\n\nexport class Route {\n  path: string\n  index?: number\n  element: FElement\n  parentRoute?: Route\n  parent?: FHTMLElement\n  children?: Route[] = []\n\n  constructor(path: string, element: FElement){\n    this.path = path\n    this.element = element\n  }\n}\n\n","import { ComputedRefresh, DOMUpdate, EffectCall, RouteChange, Task } from \"./tasks\";\n\nfunction quickSortByPriority(array: Task[]) {\n  if (array.length <= 1) {\n    return array;\n  }\n\n  let pivot = array[0];\n  let left = [];\n  let right = [];\n\n  for (let i = 1; i < array.length; i++) {\n    array[i].priority < pivot.priority ? left.push(array[i]) : right.push(array[i]);\n  }\n  return quickSortByPriority(left).concat(pivot, quickSortByPriority(right));\n};\n\nexport class Stack {\n  tasks: Task[] = []\n  running: boolean = false\n  constructor() {\n  }\n\n  pop(): Task {\n    if (this.tasks.length > 0) {\n      let highestPriorityTask = this.tasks[0]\n      this.tasks = this.tasks.slice(1)\n      return highestPriorityTask\n    }\n  }\n\n  push(task: Task) {\n    this.tasks.push(task)\n    this.tasks = quickSortByPriority(this.tasks)\n    if (!this.running) this.run()\n  }\n\n  empty() {\n    return this.tasks.length == 0\n  }\n\n  run() {\n    if (!this.running) this.running = true\n    while (this.running) {\n      if (this.empty()) {\n        this.running = false\n        break;\n      }\n      let task = this.pop()\n      task.call()\n    }\n  }\n}\n","export * from \"./state\";\nexport * from \"./effect\";\nexport * from \"./control-flow\";\nexport * from \"./computed\";\n","import { Computed } from \"./computed\"\nimport { State } from \"./state\"\n\nexport class Effect {\n  _id: string\n  effect: ()=>void\n  states: State[]\n\n  constructor(fn: ()=>void, ...states: State[]){\n    this.effect = fn\n    this.states = states\n    this._id = crypto.randomUUID()\n    Felin.registerEffect(this)\n  }\n}\n","import { FElement } from \"../elements/element\"\nimport { State } from \"./state\"\n\nexport class Conditional {\n  condition: ()=>boolean\n  _true: FElement\n  _false: FElement\n  parent?: FElement\n  index:number\n\n  constructor(condition: ()=>boolean, _true: FElement, _false: FElement){\n    this.condition = condition\n    this._true = _true\n    this._false = _false\n  }\n\n  element(parent?: FElement){\n    if(parent)\n      this.parent = parent\n    let result = this.condition()\n    if(result)\n      return this._true.element()\n    else\n      return this._false.element()\n  }\n}\n\nexport class Loop<T = any> {\n  state: State<Array<T>>\n  iteration: (element: T)=>FElement\n  index: number\n\n  constructor(state: State, iteration: (element: T)=>FElement){\n    this.state = state\n    this.iteration = iteration\n  }\n}\n","export * from \"./component\";\nexport * from \"./element\";\nexport * from \"./html\";\nexport * from \"./svg\";\n","import { FElement } from \"./element\"\nimport { ExtensibleFunction } from \"../utils\"\n\nexport class Component<T extends { [key: string]: any }> extends ExtensibleFunction {\n  fn: (props: T) => FElement\n  props: T\n  parentNode?: FElement\n\n  constructor(fn: (props: T) => FElement) {\n    super((props: T) => { this.props = props; return this })\n    this.fn = fn\n  }\n\n  element(parent?: FElement) {\n    if (parent) {\n      this.parentNode = parent\n    }\n    let element = this.fn(this.props)\n    return element.element()\n  }\n}\n","import {FHTMLElement, FSVGElement, FElement} from '../elements/element'\n\nexport const a = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"a\", children = children)\n\treturn element;\n}\n\nexport const abbr = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"abbr\", children = children)\n\treturn element;\n}\n\nexport const address = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"address\", children = children)\n\treturn element;\n}\n\nexport const area = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"area\", children = children)\n\treturn element;\n}\n\nexport const article = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"article\", children = children)\n\treturn element;\n}\n\nexport const aside = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"aside\", children = children)\n\treturn element;\n}\n\nexport const audio = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"audio\", children = children)\n\treturn element;\n}\n\nexport const b = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"b\", children = children)\n\treturn element;\n}\n\nexport const base = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"base\", children = children)\n\treturn element;\n}\n\nexport const bdi = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"bdi\", children = children)\n\treturn element;\n}\n\nexport const bdo = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"bdo\", children = children)\n\treturn element;\n}\n\nexport const blockquote = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"blockquote\", children = children)\n\treturn element;\n}\n\nexport const body = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"body\", children = children)\n\treturn element;\n}\n\nexport const br = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"br\", children = children)\n\treturn element;\n}\n\nexport const button = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"button\", children = children)\n\treturn element;\n}\n\nexport const canvas = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"canvas\", children = children)\n\treturn element;\n}\n\nexport const caption = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"caption\", children = children)\n\treturn element;\n}\n\nexport const cite = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"cite\", children = children)\n\treturn element;\n}\n\nexport const code = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"code\", children = children)\n\treturn element;\n}\n\nexport const col = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"col\", children = children)\n\treturn element;\n}\n\nexport const colgroup = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"colgroup\", children = children)\n\treturn element;\n}\n\nexport const data = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"data\", children = children)\n\treturn element;\n}\n\nexport const datalist = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"datalist\", children = children)\n\treturn element;\n}\n\nexport const dd = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"dd\", children = children)\n\treturn element;\n}\n\nexport const del = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"del\", children = children)\n\treturn element;\n}\n\nexport const details = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"details\", children = children)\n\treturn element;\n}\n\nexport const dfn = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"dfn\", children = children)\n\treturn element;\n}\n\nexport const dialog = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"dialog\", children = children)\n\treturn element;\n}\n\nexport const div = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"div\", children = children)\n\treturn element;\n}\n\nexport const dl = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"dl\", children = children)\n\treturn element;\n}\n\nexport const dt = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"dt\", children = children)\n\treturn element;\n}\n\nexport const em = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"em\", children = children)\n\treturn element;\n}\n\nexport const embed = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"embed\", children = children)\n\treturn element;\n}\n\nexport const fieldset = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"fieldset\", children = children)\n\treturn element;\n}\n\nexport const figcaption = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"figcaption\", children = children)\n\treturn element;\n}\n\nexport const figure = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"figure\", children = children)\n\treturn element;\n}\n\nexport const footer = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"footer\", children = children)\n\treturn element;\n}\n\nexport const form = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"form\", children = children)\n\treturn element;\n}\n\nexport const h1 = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"h1\", children = children)\n\treturn element;\n}\n\nexport const h2 = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"h2\", children = children)\n\treturn element;\n}\n\nexport const h3 = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"h3\", children = children)\n\treturn element;\n}\n\nexport const h4 = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"h4\", children = children)\n\treturn element;\n}\n\nexport const h5 = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"h5\", children = children)\n\treturn element;\n}\n\nexport const h6 = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"h6\", children = children)\n\treturn element;\n}\n\nexport const head = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"head\", children = children)\n\treturn element;\n}\n\nexport const header = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"header\", children = children)\n\treturn element;\n}\n\nexport const hgroup = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"hgroup\", children = children)\n\treturn element;\n}\n\nexport const hr = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"hr\", children = children)\n\treturn element;\n}\n\nexport const html = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"html\", children = children)\n\treturn element;\n}\n\nexport const i = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"i\", children = children)\n\treturn element;\n}\n\nexport const iframe = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"iframe\", children = children)\n\treturn element;\n}\n\nexport const img = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"img\", children = children)\n\treturn element;\n}\n\nexport const input = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"input\", children = children)\n\treturn element;\n}\n\nexport const ins = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"ins\", children = children)\n\treturn element;\n}\n\nexport const kbd = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"kbd\", children = children)\n\treturn element;\n}\n\nexport const label = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"label\", children = children)\n\treturn element;\n}\n\nexport const legend = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"legend\", children = children)\n\treturn element;\n}\n\nexport const li = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"li\", children = children)\n\treturn element;\n}\n\nexport const link = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"link\", children = children)\n\treturn element;\n}\n\nexport const main = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"main\", children = children)\n\treturn element;\n}\n\nexport const map = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"map\", children = children)\n\treturn element;\n}\n\nexport const mark = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"mark\", children = children)\n\treturn element;\n}\n\nexport const menu = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"menu\", children = children)\n\treturn element;\n}\n\nexport const meta = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"meta\", children = children)\n\treturn element;\n}\n\nexport const meter = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"meter\", children = children)\n\treturn element;\n}\n\nexport const nav = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"nav\", children = children)\n\treturn element;\n}\n\nexport const noscript = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"noscript\", children = children)\n\treturn element;\n}\n\nexport const object = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"object\", children = children)\n\treturn element;\n}\n\nexport const ol = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"ol\", children = children)\n\treturn element;\n}\n\nexport const optgroup = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"optgroup\", children = children)\n\treturn element;\n}\n\nexport const option = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"option\", children = children)\n\treturn element;\n}\n\nexport const output = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"output\", children = children)\n\treturn element;\n}\n\nexport const p = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"p\", children = children)\n\treturn element;\n}\n\nexport const picture = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"picture\", children = children)\n\treturn element;\n}\n\nexport const pre = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"pre\", children = children)\n\treturn element;\n}\n\nexport const progress = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"progress\", children = children)\n\treturn element;\n}\n\nexport const q = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"q\", children = children)\n\treturn element;\n}\n\nexport const rp = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"rp\", children = children)\n\treturn element;\n}\n\nexport const rt = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"rt\", children = children)\n\treturn element;\n}\n\nexport const ruby = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"ruby\", children = children)\n\treturn element;\n}\n\nexport const s = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"s\", children = children)\n\treturn element;\n}\n\nexport const samp = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"samp\", children = children)\n\treturn element;\n}\n\nexport const search = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"search\", children = children)\n\treturn element;\n}\n\nexport const section = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"section\", children = children)\n\treturn element;\n}\n\nexport const select = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"select\", children = children)\n\treturn element;\n}\n\nexport const slot = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"slot\", children = children)\n\treturn element;\n}\n\nexport const small = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"small\", children = children)\n\treturn element;\n}\n\nexport const source = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"source\", children = children)\n\treturn element;\n}\n\nexport const span = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"span\", children = children)\n\treturn element;\n}\n\nexport const strong = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"strong\", children = children)\n\treturn element;\n}\n\nexport const sub = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"sub\", children = children)\n\treturn element;\n}\n\nexport const summary = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"summary\", children = children)\n\treturn element;\n}\n\nexport const sup = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"sup\", children = children)\n\treturn element;\n}\n\nexport const table = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"table\", children = children)\n\treturn element;\n}\n\nexport const tbody = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"tbody\", children = children)\n\treturn element;\n}\n\nexport const td = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"td\", children = children)\n\treturn element;\n}\n\nexport const template = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"template\", children = children)\n\treturn element;\n}\n\nexport const textarea = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"textarea\", children = children)\n\treturn element;\n}\n\nexport const tfoot = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"tfoot\", children = children)\n\treturn element;\n}\n\nexport const th = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"th\", children = children)\n\treturn element;\n}\n\nexport const thead = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"thead\", children = children)\n\treturn element;\n}\n\nexport const time = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"time\", children = children)\n\treturn element;\n}\n\nexport const title = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"title\", children = children)\n\treturn element;\n}\n\nexport const tr = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"tr\", children = children)\n\treturn element;\n}\n\nexport const track = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"track\", children = children)\n\treturn element;\n}\n\nexport const u = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"u\", children = children)\n\treturn element;\n}\n\nexport const ul = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"ul\", children = children)\n\treturn element;\n}\n\nexport const _var = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"var\", children = children)\n\treturn element;\n}\n\nexport const video = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"video\", children = children)\n\treturn element;\n}\n\nexport const wbr = (...children: FElement[]):FElement => {\n\tlet element = new FHTMLElement(\"wbr\", children = children)\n\treturn element;\n}\n","import {FHTMLElement, FSVGElement, FElement} from '../elements/element'\n\nexport const _a = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"a\", children = children)\n\treturn element;\n}\n\nexport const animate = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"animate\", children = children)\n\treturn element;\n}\n\nexport const animateMotion = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"animateMotion\", children = children)\n\treturn element;\n}\n\nexport const animateTransform = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"animateTransform\", children = children)\n\treturn element;\n}\n\nexport const circle = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"circle\", children = children)\n\treturn element;\n}\n\nexport const clipPath = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"clipPath\", children = children)\n\treturn element;\n}\n\nexport const defs = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"defs\", children = children)\n\treturn element;\n}\n\nexport const desc = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"desc\", children = children)\n\treturn element;\n}\n\nexport const ellipse = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"ellipse\", children = children)\n\treturn element;\n}\n\nexport const feBlend = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feBlend\", children = children)\n\treturn element;\n}\n\nexport const feColorMatrix = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feColorMatrix\", children = children)\n\treturn element;\n}\n\nexport const feComponentTransfer = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feComponentTransfer\", children = children)\n\treturn element;\n}\n\nexport const feComposite = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feComposite\", children = children)\n\treturn element;\n}\n\nexport const feConvolveMatrix = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feConvolveMatrix\", children = children)\n\treturn element;\n}\n\nexport const feDiffuseLighting = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feDiffuseLighting\", children = children)\n\treturn element;\n}\n\nexport const feDisplacementMap = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feDisplacementMap\", children = children)\n\treturn element;\n}\n\nexport const feDistantLight = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feDistantLight\", children = children)\n\treturn element;\n}\n\nexport const feDropShadow = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feDropShadow\", children = children)\n\treturn element;\n}\n\nexport const feFlood = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feFlood\", children = children)\n\treturn element;\n}\n\nexport const feFuncA = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feFuncA\", children = children)\n\treturn element;\n}\n\nexport const feFuncB = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feFuncB\", children = children)\n\treturn element;\n}\n\nexport const feFuncG = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feFuncG\", children = children)\n\treturn element;\n}\n\nexport const feFuncR = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feFuncR\", children = children)\n\treturn element;\n}\n\nexport const feGaussianBlur = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feGaussianBlur\", children = children)\n\treturn element;\n}\n\nexport const feImage = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feImage\", children = children)\n\treturn element;\n}\n\nexport const feMerge = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feMerge\", children = children)\n\treturn element;\n}\n\nexport const feMergeNode = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feMergeNode\", children = children)\n\treturn element;\n}\n\nexport const feMorphology = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feMorphology\", children = children)\n\treturn element;\n}\n\nexport const feOffset = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feOffset\", children = children)\n\treturn element;\n}\n\nexport const fePointLight = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"fePointLight\", children = children)\n\treturn element;\n}\n\nexport const feSpecularLighting = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feSpecularLighting\", children = children)\n\treturn element;\n}\n\nexport const feSpotLight = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feSpotLight\", children = children)\n\treturn element;\n}\n\nexport const feTile = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feTile\", children = children)\n\treturn element;\n}\n\nexport const feTurbulence = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"feTurbulence\", children = children)\n\treturn element;\n}\n\nexport const filter = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"filter\", children = children)\n\treturn element;\n}\n\nexport const foreignObject = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"foreignObject\", children = children)\n\treturn element;\n}\n\nexport const g = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"g\", children = children)\n\treturn element;\n}\n\nexport const image = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"image\", children = children)\n\treturn element;\n}\n\nexport const line = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"line\", children = children)\n\treturn element;\n}\n\nexport const linearGradient = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"linearGradient\", children = children)\n\treturn element;\n}\n\nexport const marker = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"marker\", children = children)\n\treturn element;\n}\n\nexport const mask = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"mask\", children = children)\n\treturn element;\n}\n\nexport const metadata = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"metadata\", children = children)\n\treturn element;\n}\n\nexport const mpath = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"mpath\", children = children)\n\treturn element;\n}\n\nexport const path = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"path\", children = children)\n\treturn element;\n}\n\nexport const pattern = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"pattern\", children = children)\n\treturn element;\n}\n\nexport const polygon = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"polygon\", children = children)\n\treturn element;\n}\n\nexport const polyline = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"polyline\", children = children)\n\treturn element;\n}\n\nexport const radialGradient = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"radialGradient\", children = children)\n\treturn element;\n}\n\nexport const rect = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"rect\", children = children)\n\treturn element;\n}\n\nexport const set = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"set\", children = children)\n\treturn element;\n}\n\nexport const stop = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"stop\", children = children)\n\treturn element;\n}\n\nexport const svg = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"svg\", children = children)\n\treturn element;\n}\n\nexport const _switch = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"switch\", children = children)\n\treturn element;\n}\n\nexport const symbol = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"symbol\", children = children)\n\treturn element;\n}\n\nexport const _text = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"text\", children = children)\n\treturn element;\n}\n\nexport const textPath = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"textPath\", children = children)\n\treturn element;\n}\n\nexport const _title = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"title\", children = children)\n\treturn element;\n}\n\nexport const tspan = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"tspan\", children = children)\n\treturn element;\n}\n\nexport const use = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"use\", children = children)\n\treturn element;\n}\n\nexport const view = (...children: FElement[]):FElement => {\n\tlet element = new FSVGElement(\"view\", children = children)\n\treturn element;\n}\n","export * from \"./document\";\nexport * from \"./registry\";\nexport * from \"./stack\";\nexport * from \"./tasks\";\n","import { FElement, FHTMLElement, FSVGElement, FText } from \"../elements/element\"\nimport { State } from \"../primitives/state\";\nimport { Router } from \"../router\";\nimport { flattenElementTree } from \"../utils\";\n\nexport class FDocument {\n  window: Window\n  document: Document\n  rootSelector: string;\n  rootElement: FHTMLElement;\n  router?: Router\n\n  constructor() {\n    if (window) {\n      this.window = window\n      this.document = document\n    }\n  }\n\n  render(selector: string, element: FHTMLElement) {\n    if (this.document instanceof Document) {\n      let target = this.document.querySelector(selector)\n      this.rootSelector = selector;\n      this.rootElement = element;\n      if (target instanceof HTMLElement || element instanceof Node) {\n        let router = this.hasRouter(element)\n        let domElementRoot = element.element()\n        let states = this.getStates(element)\n        target.appendChild(domElementRoot)\n        Felin.registerFlDocumentRoot(selector, this)\n        Felin.registerStates(selector, states)\n        if(router){\n          router.buildRouterTree()\n          Felin.registerActiveRouter(this.rootSelector, router)\n        }\n        Felin.run()\n      } else\n        throw Error(\"FelinError: no element found with selector \" + selector)\n    }\n  }\n\n  selector(element: FHTMLElement|FSVGElement) {\n    let elementPath: (FHTMLElement|FSVGElement)[] = []\n    let currentElement = element\n    let selector = `${this.rootSelector}>${this.rootElement.name}`\n    while (currentElement._id != this.rootElement._id) {\n      if (currentElement instanceof FHTMLElement || currentElement instanceof FSVGElement) {\n        elementPath.push(currentElement)\n      }\n      currentElement = currentElement.parent \n    }\n    for (let pathElement of elementPath) {\n      selector += `>${pathElement.name}`\n    }\n    return selector\n  }\n\n  rerenderElement(element: FHTMLElement){\n    let selector = this.selector(element)\n    let targetNode = this.document.querySelector(selector)\n    targetNode.replaceWith(element.element())\n  }\n\n  hasRouter(element: FElement){\n    let router: Router|null = null\n    let elementTreeList = flattenElementTree(element)\n    elementTreeList.forEach(el=>{\n      if(el instanceof FHTMLElement){\n        if(el.register.router) router = el.register.router\n      }\n    })\n    return router\n  }\n\n  getStates(element: FElement){\n    let states: State[] = [];\n    let elementTreeList = flattenElementTree(element)\n    for(let el of elementTreeList){\n      states = [...states, ...(el as FElement<{states: State[]}>).register.states]\n    }\n    let uniqueStates = [...new Set(states.map(e=>e._id))]\n    states = uniqueStates.map(id=>states.find(s=>s._id == id))\n    return states\n  }\n}\n","import { State } from \"./primitives/state\";\nimport { Effect } from \"./primitives/effect\";\nimport { Computed } from \"./primitives/computed\";\nimport { Loop, Conditional } from \"./primitives/control-flow\";\nimport { Route, Router } from \"./router\";\nimport { FElement, FHTMLElement, FText } from \"./elements/element\";\nimport { FDocument } from \"./felin\";\n\nexport function $text(text: string, ...args: any[]) {\n  return new FText(text, ...args)\n}\n\nexport function $state<T>(value: T) {\n  return new State<T>(value);\n}\n\nexport function $effect(fn: ()=>void, ...states: State[]){\n  new Effect(fn, ...states)\n}\n\nexport function $computed(fn: (...args: State[])=>void, ...states: State[]){\n  return new Computed(fn, ...states)\n}\n\nexport function $router(...routes: Route[]){\n  return new Router(...routes)\n}\n\nexport function $route(path: string, element: FElement){\n  return new Route(path, element)\n}\n\nexport function $params(){\n  return Felin.getRouterParams()\n}\n\nexport function $document(){\n  return new FDocument()\n}\n\nexport function $link(path: string, element: FElement|string){\n  let linkElement = new FHTMLElement(\"a\", [element])\n  return linkElement.listener(\"click\", (e)=>{\n    e.preventDefault()\n    let rootSelector = Felin.getElementRootSelector(linkElement)\n    if(typeof rootSelector == 'string')\n      Felin.registerRouteChange(path, rootSelector)\n  }).style({\n      textDecoration: 'underline',\n      color: \"blue\",\n      cursor: 'pointer'\n    })\n}\n\nexport function $if(condition: ()=>boolean, trueBranch: FElement, falseBranch: FElement){\n  return new Conditional(condition, trueBranch, falseBranch)\n}\n\nexport function $for<T>(state: State<Array<T>>, iteration: (element: T)=>FElement){\n  return new Loop(state, iteration)\n}\n\nexport function $length<T>(state: State<Array<T>>){\n  return new State(state.length)\n}\n"],"names":[],"version":3,"file":"felin.js.map"}